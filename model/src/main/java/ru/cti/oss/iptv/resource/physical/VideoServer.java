// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.resource.physical;

/**
 * Autogenerated POJO EJB class for VideoServer containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "VIDEO_SERVER")
@javax.persistence.NamedQueries
({
    @javax.persistence.NamedQuery(name = "VideoServer.findAll", query = "select videoServer from VideoServer AS videoServer"),
    @javax.persistence.NamedQuery(name = "VideoServer.findByStatus", query = "from VideoServer as videoServer where videoServer.status = :status"), 
    @javax.persistence.NamedQuery(name = "VideoServer.findByName", query = "from VideoServer as videoServer where videoServer.name = :name")
})
public class VideoServer
    extends ru.cti.oss.iptv.resource.physical.Server
    implements java.io.Serializable
{

    private static final long serialVersionUID = -3719078209280486190L;

    // ----------- Attribute Definitions ------------

    private ru.cti.oss.iptv.resource.physical.VideoServerType type;
    private java.lang.Long port;
    private java.lang.String controlInterface;
    private java.lang.Integer priority;


    // --------- Relationship Definitions -----------

    @javax.persistence.Column(name = "PRIORITY", nullable = false, insertable = true, updatable = true)
    public java.lang.Integer getPriority() {
		return priority;
	}

	public void setPriority(java.lang.Integer priority) {
		this.priority = priority;
	}

	private java.util.Set<ru.cti.oss.iptv.resource.logical.MediaAsset> mediaAssets = new java.util.TreeSet<ru.cti.oss.iptv.resource.logical.MediaAsset>();

    // ---- Manageable Display Attributes (Transient) -----


    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public VideoServer() {}

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param availabilityStatus Value for the availabilityStatus property
     * @param hostname Value for the hostname property
     * @param type Value for the type property
     * @param port Value for the port property
     */
    public VideoServer(java.lang.String name, String controlInterface, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status, ru.cti.oss.cbe.datatypes.AvailabilityStatus availabilityStatus, java.lang.String hostname, ru.cti.oss.iptv.resource.physical.VideoServerType type, java.lang.Long port, java.lang.Integer priority)
    {
        super(name, description, status, availabilityStatus, hostname);
        setName(name);
        setDescription(description);
        setStatus(status);
        setAvailabilityStatus(availabilityStatus);
        setHostname(hostname);
        setControlInterface(controlInterface);
        setType(type);
        setPort(port);
        setPriority(priority);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param availabilityStatus Value for the availabilityStatus property
     * @param hostname Value for the hostname property
     * @param type Value for the type property
     * @param port Value for the port property
     * @param mediaAssets Value for the mediaAssets relation
     */
    public VideoServer(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status, ru.cti.oss.cbe.datatypes.AvailabilityStatus availabilityStatus, java.lang.String hostname, ru.cti.oss.iptv.resource.physical.VideoServerType type, java.lang.Long port, java.util.Set<ru.cti.oss.iptv.resource.logical.MediaAsset> mediaAssets, java.lang.Integer priority)
    {
        setName(name);
        setDescription(description);
        setStatus(status);
        setAvailabilityStatus(availabilityStatus);
        setHostname(hostname);
        setType(type);
        setPort(port);
        setPriority(priority);
        setMediaAssets(mediaAssets);
    }


    // -------- Attribute Accessors ----------

    /**
     * Get the type property.
     * 
     * @return ru.cti.oss.iptv.resource.physical.VideoServerType The value of type
     */
    	@javax.persistence.Column(name = "TYPE", insertable = true, updatable = true)
    @javax.persistence.Enumerated(javax.persistence.EnumType.STRING)
    public ru.cti.oss.iptv.resource.physical.VideoServerType getType()
    {
        return type;
    }

    /**
     * Set the type property.
     * @param value the new value
     */
    public void setType(ru.cti.oss.iptv.resource.physical.VideoServerType value)
    {
        this.type = value;
    }

    /**
     * Get the port property.
     * 
     * @return java.lang.Long The value of port
     */
    	@javax.persistence.Column(name = "PORT", nullable = false, insertable = true, updatable = true)
    public java.lang.Long getPort()
    {
        return port;
    }

    /**
     * Set the port property.
     * @param value the new value
     */
    public void setPort(java.lang.Long value)
    {
        this.port = value;
    }

    /**
     * Get the controlInterface property.
     * 
     * @return java.lang.String The value of controlInterface
     */
    	@javax.persistence.Column(name = "CONTROL_INTERFACE", nullable = true, insertable = true, updatable = true)
    public java.lang.String getControlInterface()
    {
        return controlInterface;
    }

    /**
     * Set the controlInterface property.
     * @param value the new value
     */
    public void setControlInterface(java.lang.String value)
    {
        this.controlInterface = value;
    }

    // ------------- Relations ------------------

    /**
     * Get the mediaAssets Collection
     *
     * @return java.util.Set<ru.cti.oss.iptv.resource.logical.MediaAsset>
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY)
    @org.hibernate.annotations.BatchSize(size=100)
    @org.hibernate.annotations.Fetch(org.hibernate.annotations.FetchMode.SUBSELECT)
    @javax.persistence.JoinTable
    (
        name = "MEDIA_ASSETS2VIDEOSERVERS",
        joinColumns = {@javax.persistence.JoinColumn(name = "VIDEO_SERVER_IDC", referencedColumnName = "ID")},
        inverseJoinColumns = {@javax.persistence.JoinColumn(name = "MEDIA_ASSET_IDC", referencedColumnName = "ID")}
    )
    public java.util.Set<ru.cti.oss.iptv.resource.logical.MediaAsset> getMediaAssets()
    {
        return this.mediaAssets;
    }

    /**
     * Set the mediaAssets
     *
     * @param mediaAssets
     */
    public void setMediaAssets (java.util.Set<ru.cti.oss.iptv.resource.logical.MediaAsset> mediaAssets)
    {
        this.mediaAssets = mediaAssets;
    }

    /**
     * Add MediaAsset
     *
     * @param mediaAsset
     */

    public void addToMediaAssets(ru.cti.oss.iptv.resource.logical.MediaAsset mediaAsset)
    {
        if (mediaAsset == null ) return;
        this.getMediaAssets().add(mediaAsset);
        mediaAsset.getVideoservers().add(this);
    }

    /**
     * Remove MediaAsset
     *
     * @param mediaAsset
     */

    public void removeFromMediaAssets (ru.cti.oss.iptv.resource.logical.MediaAsset mediaAsset)
    {
        if (mediaAsset == null ) return;
        this.getMediaAssets().remove(mediaAsset);
        mediaAsset.getVideoservers().remove(this);
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof VideoServer))
        {
            return false;
        }
        final VideoServer that = (VideoServer)object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode()
    {
        int hashCode = super.hashCode();
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("VideoServer(=");
        sb.append(super.toString());
        sb.append("controlInterface: ");
        sb.append(getControlInterface());
        sb.append(", type: ");
        sb.append(getType());
        sb.append(", port: ");
        sb.append(getPort());
        sb.append(", priority: ");
        sb.append(getPriority());
        sb.append(")");
        return sb.toString();
    }

}