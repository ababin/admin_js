// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.common;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for RatingSystem containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "RATING_SYSTEM")
@javax.persistence.NamedQuery(name = "RatingSystem.findAll", query = "select ratingSystem from RatingSystem AS ratingSystem")
public class RatingSystem implements java.io.Serializable, Comparable < RatingSystem >
{
    
    private static final long serialVersionUID = 5534441072850625056L;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String name;
    private java.lang.String description;
    private java.lang.Long id;
    
    // --------- Relationship Definitions -----------
    
    private java.util.Set < ru.cti.oss.iptv.common.Rating > ratings = new java.util.TreeSet < ru.cti.oss.iptv.common.Rating >();
    
    // ---- Manageable Display Attributes (Transient) -----
    
    // --------------- Constructors -----------------
    
    /**
     * Default empty constructor
     */
    public RatingSystem() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     */
    public RatingSystem(java.lang.String name, java.lang.String description) {
        setName(name);
        setDescription(description);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param ratings Value for the ratings relation
     */
    public RatingSystem(java.lang.String name, java.lang.String description, java.util.Set < ru.cti.oss.iptv.common.Rating > ratings) {
        setName(name);
        setDescription(description);
        
        setRatings(ratings);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the name property.
     * 
     * @return java.lang.String The value of name
     */
    @javax.persistence.Column(name = "NAME", nullable = false, insertable = true, updatable = true)
    @Index(name = "name_index")
    public java.lang.String getName() {
        return name;
    }
    
    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(java.lang.String value) {
        this.name = value;
    }
    
    /**
     * Get the description property.
     * 
     * @return java.lang.String The value of description
     */
    @javax.persistence.Column(name = "DESCRIPTION", insertable = true, updatable = true)
    public java.lang.String getDescription() {
        return description;
    }
    
    /**
     * Set the description property.
     * @param value the new value
     */
    public void setDescription(java.lang.String value) {
        this.description = value;
    }
    
    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    @Index(name = "id_index")
    public java.lang.Long getId() {
        return id;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        this.id = value;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Get the ratings Collection
     *
     * @return java.util.Set<ru.cti.oss.iptv.common.Rating>
     */
    @javax.persistence.OneToMany(mappedBy = "system", fetch = javax.persistence.FetchType.EAGER)
    public java.util.Set < ru.cti.oss.iptv.common.Rating > getRatings() {
        return this.ratings;
    }
    
    /**
     * Set the ratings
     *
     * @param ratings
     */
    public void setRatings(java.util.Set < ru.cti.oss.iptv.common.Rating > ratings) {
        this.ratings = ratings;
    }
    
    /**
     * Add to ratings
     *
     * @param rating
     */
    
    public void addToRatings(ru.cti.oss.iptv.common.Rating rating) {
        if (rating == null)
            return;
        this.getRatings().add(rating);
        rating.setSystem(this);
    }
    
    /**
     * Remove from ratings
     *
     * @param rating
     */
    
    public void removeFromRatings(ru.cti.oss.iptv.common.Rating rating) {
        if (rating == null)
            return;
        this.getRatings().remove(rating);
        rating.setSystem(null);
    }
    
    // -------- Common Methods -----------
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof RatingSystem)) {
            return false;
        }
        final RatingSystem that = (RatingSystem) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("RatingSystem(=");
        sb.append("name: ");
        sb.append(getName());
        sb.append(", description: ");
        sb.append(getDescription());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(RatingSystem o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getName() != null) {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getDescription() != null) {
                cmp = (cmp != 0 ? cmp : this.getDescription().compareTo(o.getDescription()));
            }
        }
        return cmp;
    }
}