// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.cbe.service;

import javax.persistence.Column;

import org.hibernate.annotations.Index;

import ru.cti.oss.billing.model.ServiceResource;
import ru.cti.oss.cbe.customer.Customer;

/**
 * Autogenerated POJO EJB class for Service containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "SERVICE")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@javax.persistence.NamedQueries({
		@javax.persistence.NamedQuery(name = "Service.findAll", query = "select service from Service service"),
		
		@javax.persistence.NamedQuery(name = "Service.findForProlongation", 
		query = "SELECT service FROM Service service " +
				"WHERE service.periodical = TRUE " +
				"  AND service.serviceSpecification.status = 'ACTIVE' " +
				"  AND service.serviceSpecification.isPackage = TRUE " +
				"  AND service.serviceSpecification.periodical = TRUE " +
				"  AND service.timeEnd < :now " +
				"  AND service.timeEnd > :expiredMoment " +
				"  AND service.id > :lastProcessedId " +
				"ORDER BY service.id"),
				
	@javax.persistence.NamedQuery(name = "Service.countForProlongation", 
		query = "SELECT COUNT(service) FROM Service service " +
				"WHERE service.periodical = TRUE " +
				"  AND service.serviceSpecification.status = 'ACTIVE' " +
				"  AND service.serviceSpecification.isPackage = TRUE " +
				"  AND service.serviceSpecification.periodical = TRUE " +
				"  AND service.timeEnd < :now " +
				"  AND service.timeEnd > :expiredMoment"),
				
		@javax.persistence.NamedQuery(name = "Service.findByCustomer", query = "select service from Service service where service.customer.id = :customerId"),
		@javax.persistence.NamedQuery(name = "Service.findAvailableServices", query = "select service from Service service where service.customer.name = :number and service.timeEnd > :now"),
		@javax.persistence.NamedQuery(name = "Service.findByCustomerName", query = "select service from Service service where service.customer.name = :customerName"),
		@javax.persistence.NamedQuery(name = "Service.findByCustomerNameAndServiceSpecExtId", 
				query = "SELECT service FROM Service service WHERE service.customer.name = :customerName AND service.serviceSpecification.externalId=:extId"),
		@javax.persistence.NamedQuery(name = "Service.findByExtId",	query = "SELECT service FROM Service service WHERE service.externalId = :extId")
})

public class Service implements java.io.Serializable, Comparable < Service >
{
    
    private static final long serialVersionUID = 1276266493161395800L;
    
    private java.lang.Long id;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String name;
    private java.lang.String description;
    private ru.cti.oss.cbe.service.ServiceStatus status;
    private java.util.Date timeBegin;
    private java.util.Date timeEnd;
    private String externalId;
    private Boolean periodical;
    private Double price;
	private Long rentalPeriod;
    
    // --------- Relationship Definitions -----------
    
    private ru.cti.oss.billing.model.ServiceResource resource;
    private ServiceSpecification serviceSpecification;
    private TariffPlanSpecification tariffPlanSpecification;
    private Customer customer;
    
    // ---- Manageable Display Attributes (Transient) -----
    
    private java.lang.Long serviceSpecificationLabel; // Manageable display attribute
    
    // --------------- Constructors -----------------
    
    /**
     * Default empty constructor
     */
    public Service() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param timeBegin Value for the timeBegin property
     * @param timeEnd Value for the timeEnd property
     */
    public Service(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.service.ServiceStatus status,
            java.util.Date timeBegin, java.util.Date timeEnd) {
        setName(name);
        setDescription(description);
        setStatus(status);
        setTimeBegin(timeBegin);
        setTimeEnd(timeEnd);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param timeBegin Value for the timeBegin property
     * @param timeEnd Value for the timeEnd property
     * @param resource Value for the resources relation
     * @param serviceSpecification Value for the serviceSpecification relation
     */
    public Service(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.service.ServiceStatus status,
            java.util.Date timeBegin, java.util.Date timeEnd, ServiceResource resources,
            ru.cti.oss.cbe.service.ServiceSpecification serviceSpecification) {
        setName(name);
        setDescription(description);
        setStatus(status);
        setTimeBegin(timeBegin);
        setTimeEnd(timeEnd);
        setResource(resource);
        setServiceSpecification(serviceSpecification);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the name property.
     * 
     * @return java.lang.String The value of name
     */
    @javax.persistence.Column(name = "NAME", nullable = true, insertable = true, updatable = true)
    @Index(name = "name_index")
    public java.lang.String getName() {
        return name;
    }
    
    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(java.lang.String value) {
        this.name = value;
    }
    
    /**
     * Get the description property.
     * 
     * @return java.lang.String The value of description
     */
    @javax.persistence.Column(name = "DESCRIPTION", insertable = true, updatable = true, length = 3800)
    public java.lang.String getDescription() {
        return description;
    }
    
    /**
     * Set the description property.
     * @param value the new value
     */
    public void setDescription(java.lang.String value) {
        this.description = value;
    }
    
    /**
     * Get the status property.
     * 
     * @return ru.cti.oss.cbe.service.ServiceStatus The value of status
     */
    @javax.persistence.Column(name = "STATUS", insertable = true, updatable = true)
    @javax.persistence.Enumerated(javax.persistence.EnumType.STRING)
    public ru.cti.oss.cbe.service.ServiceStatus getStatus() {
        return status;
    }
    
    /**
     * Set the status property.
     * @param value the new value
     */
    public void setStatus(ru.cti.oss.cbe.service.ServiceStatus value) {
        this.status = value;
    }
    
    /**
     * Get the timeBegin property.
     * 
     * @return java.util.Date The value of timeBegin
     */
    @javax.persistence.Column(name = "TIME_BEGIN", nullable = false, insertable = true, updatable = true)
    @javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
    public java.util.Date getTimeBegin() {
        return timeBegin;
    }
    
    /**
     * Set the timeBegin property.
     * @param value the new value
     */
    public void setTimeBegin(java.util.Date value) {
        this.timeBegin = value;
    }
    
    /**
     * Get the timeEnd property.
     * 
     * @return java.util.Date The value of timeEnd
     */
    @javax.persistence.Column(name = "TIME_END", nullable = false, insertable = true, updatable = true)
    @javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
    public java.util.Date getTimeEnd() {
        return timeEnd;
    }
    
    /**
     * Set the timeEnd property.
     * @param value the new value
     */
    public void setTimeEnd(java.util.Date value) {
        this.timeEnd = value;
    }
    
    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
     @Index(name = "id_index")
    public java.lang.Long getId() {
        return id;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        this.id = value;
    }
    
    // ------------- Relations ------------------
            
        
    /**
     * Get the serviceSpecification
     *
     * @return ru.cti.oss.cbe.service.ServiceSpecification
     */
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "SRV_SPEC" , nullable = false, insertable = true, updatable = true)
    public ru.cti.oss.cbe.service.ServiceSpecification getServiceSpecification() {
        return this.serviceSpecification;
    }
    
    /**
     * Set the serviceSpecification
     *
     * @param serviceSpecification
     */
    public void setServiceSpecification(ru.cti.oss.cbe.service.ServiceSpecification serviceSpecification) {
        this.serviceSpecification = serviceSpecification;
    }
    
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "TARIFF_PLAN_SPEC" , nullable = true, insertable = true, updatable = true)
	public TariffPlanSpecification getTariffPlanSpecification() {
		return tariffPlanSpecification;
	}

	public void setTariffPlanSpecification(TariffPlanSpecification tariffPlanSpecification) {
		this.tariffPlanSpecification = tariffPlanSpecification;
	}

    
    public void setExternalId(String externalId) {
		this.externalId = externalId;
	}

	@javax.persistence.Column(name = "EXTERNAL_ID", unique = true , insertable = true, updatable = true)
	public String getExternalId() {
		return externalId;
	}

	public void setResource(ServiceResource resource) {
		this.resource = resource;
	}

	@javax.persistence.OneToOne(fetch = javax.persistence.FetchType.LAZY)
	@javax.persistence.JoinColumn(name = "RES" , nullable = true)
	public ServiceResource getResource() {
		return resource;
	}

	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	@javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY)
	@javax.persistence.JoinColumn(name = "CUSTOMER", nullable = false, insertable = true, updatable = true)
	public Customer getCustomer() {
		return customer;
	}
    
    // -------- Common Methods -----------
    
    /**
     * Get the serviceSpecificationLabel
     *
     * @return java.lang.Long
     */
    @javax.persistence.Transient
    public java.lang.Long getServiceSpecificationLabel() {
        return this.serviceSpecificationLabel;
    }
    
    /**
     * Set the serviceSpecificationLabel
     *
     * @param serviceSpecificationLabel
     */
    public void setServiceSpecificationLabel(java.lang.Long serviceSpecificationLabel) {
        this.serviceSpecificationLabel = serviceSpecificationLabel;
    }
    
    // PERIODICAL
    public void setPeriodical(Boolean periodical) {
		this.periodical = periodical;
	}

	@javax.persistence.Column(name = "PERIODICAL", nullable = true, insertable = true, updatable = true)
	public Boolean getPeriodical() {
		return periodical;
	}
	
	// PRICE
	public Double getPrice() {
		return price;
	}

	public void setPrice(Double price) {
		this.price = price;
	}	
	
	// RENTAL PERIOD
	@Column(name = "rental_period", nullable = true)
	public Long getRentalPeriod() {
		return rentalPeriod;
	}

	public void setRentalPeriod(Long rentalPeriod) {
		this.rentalPeriod = rentalPeriod;
	}
    
		
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof Service)) {
            return false;
        }
        final Service that = (Service) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Service(=");
        sb.append("name: ");
        sb.append(getName());
        sb.append(", description: ");
        sb.append(getDescription());
        sb.append(", status: ");
        sb.append(getStatus());
        sb.append(", timeBegin: ");
        sb.append(getTimeBegin());
        sb.append(", timeEnd: ");
        sb.append(getTimeEnd());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(Service o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getName() != null) {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getDescription() != null) {
                cmp = (cmp != 0 ? cmp : this.getDescription().compareTo(o.getDescription()));
            }
            if (this.getStatus() != null) {
                cmp = (cmp != 0 ? cmp : this.getStatus().compareTo(o.getStatus()));
            }
            if (this.getTimeBegin() != null) {
                cmp = (cmp != 0 ? cmp : this.getTimeBegin().compareTo(o.getTimeBegin()));
            }
            if (this.getTimeEnd() != null) {
                cmp = (cmp != 0 ? cmp : this.getTimeEnd().compareTo(o.getTimeEnd()));
            }
        }
        return cmp;
    }
	
}