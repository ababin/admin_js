// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.cbe.customer;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for CustomerBillingEntry containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * <p>
 * A charge or a credit assigned to the customer's account in the
 * course or for the purpose of the billing process.
 * </p>
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "CUSTOMER_BILLING_ENTRY")
@javax.persistence.NamedQuery(name = "CustomerBillingEntry.findAll", query = "select customerBillingEntry from CustomerBillingEntry AS customerBillingEntry")
public class CustomerBillingEntry implements java.io.Serializable, Comparable < CustomerBillingEntry >
{
    
    private static final long serialVersionUID = 6195266589049461537L;
    
    // ----------- Attribute Definitions ------------
    
    private java.util.Date date;
    private java.lang.Double quantity;
    private java.lang.String description;
    private ru.cti.oss.cbe.customer.CustomerBillingEntryType type;
    private java.lang.Long event;
    private java.lang.Long id;
    private Long profileId;
    
    // --------- Relationship Definitions -----------
    
    private ru.cti.oss.cbe.customer.CustomerAccount customerAccount;
    
    /**
     * Default empty constructor
     */
    public CustomerBillingEntry() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param date Value for the date property
     * @param quantity Value for the quantity property
     * @param description Value for the description property
     * @param type Value for the type property
     * @param event Value for the event property
     */
    public CustomerBillingEntry(final java.util.Date date, final java.lang.Double quantity, final java.lang.String description,
            final ru.cti.oss.cbe.customer.CustomerBillingEntryType type, final java.lang.Long event) {
        this.setDate(date);
        this.setQuantity(quantity);
        this.setDescription(description);
        this.setType(type);
        this.setEvent(event);
    }
    
    // ---- Manageable Display Attributes (Transient) -----
    
    // --------------- Constructors -----------------
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param date Value for the date property
     * @param quantity Value for the quantity property
     * @param description Value for the description property
     * @param type Value for the type property
     * @param event Value for the event property
     * @param customerAccount Value for the customerAccount relation
     */
    public CustomerBillingEntry(final java.util.Date date, final java.lang.Double quantity, final java.lang.String description,
            final ru.cti.oss.cbe.customer.CustomerBillingEntryType type, final java.lang.Long event,
            final ru.cti.oss.cbe.customer.CustomerAccount customerAccount) {
        this.setDate(date);
        this.setQuantity(quantity);
        this.setDescription(description);
        this.setType(type);
        this.setEvent(event);
        
        this.setCustomerAccount(customerAccount);
    }
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(final CustomerBillingEntry o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getDate() != null) {
                cmp = (cmp != 0 ? cmp : this.getDate().compareTo(o.getDate()));
            }
            if (this.getQuantity() != null) {
                cmp = (cmp != 0 ? cmp : this.getQuantity().compareTo(o.getQuantity()));
            }
            if (this.getDescription() != null) {
                cmp = (cmp != 0 ? cmp : this.getDescription().compareTo(o.getDescription()));
            }
            if (this.getType() != null) {
                cmp = (cmp != 0 ? cmp : this.getType().compareTo(o.getType()));
            }
            if (this.getEvent() != null) {
                cmp = (cmp != 0 ? cmp : this.getEvent().compareTo(o.getEvent()));
            }
        }
        return cmp;
    }
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(final Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof CustomerBillingEntry)) {
            return false;
        }
        final CustomerBillingEntry that = (CustomerBillingEntry) object;
        if ((this.getId() == null) || (that.getId() == null) || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the customerAccount
     *
     * @return ru.cti.oss.cbe.customer.CustomerAccount
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "CUSTOMERACCOUNT")
    public ru.cti.oss.cbe.customer.CustomerAccount getCustomerAccount() {
        return this.customerAccount;
    }
    
    /**
     * Get the date property.
     * <p>
     * A date of creation
     * </p>
     * @return java.util.Date The value of date
     */
    @javax.persistence.Column(name = "DATE_", nullable = false, insertable = true, updatable = true)
    @javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Index(name = "date_index")
    public java.util.Date getDate() {
        return this.date;
    }
    
    /**
     * Get the description property.
     * <p>
     * A textual description
     * </p>
     * @return java.lang.String The value of description
     */
    @javax.persistence.Column(name = "DESCRIPTION", insertable = true, updatable = true)
    public java.lang.String getDescription() {
        return this.description;
    }
    
    /**
     * Get the event property.
     * 
     * @return java.lang.Long The value of event
     */
    @javax.persistence.Column(name = "EVENT", nullable = false, insertable = true, updatable = true)
    @Index(name = "event_index")
    public java.lang.Long getEvent() {
        return this.event;
    }
    
    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    @Index(name = "id_index")
    public java.lang.Long getId() {
        return this.id;
    }
    
    public Long getProfileId() {
        return this.profileId;
    }
    
    /**
     * Get the quantity property.
     * <p>
     * A unit (for example, US Dollars) and number of the applied rate
     * </p>
     * @return java.lang.Double The value of quantity
     */
    @javax.persistence.Column(name = "QUANTITY", nullable = false, insertable = true, updatable = true)
    @Index(name = "quantity_index")
    public java.lang.Double getQuantity() {
        return this.quantity;
    }
    
    /**
     * Get the type property.
     * 
     * @return ru.cti.oss.cbe.customer.CustomerBillingEntryType The value of type
     */
    @javax.persistence.Column(name = "TYPE", insertable = true, updatable = true)
    @javax.persistence.Enumerated(javax.persistence.EnumType.STRING)
    @Index(name = "type_index")
    public ru.cti.oss.cbe.customer.CustomerBillingEntryType getType() {
        return this.type;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.getId() == null ? 0 : this.getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Set the customerAccount
     *
     * @param customerAccount
     */
    public void setCustomerAccount(final ru.cti.oss.cbe.customer.CustomerAccount customerAccount) {
        this.customerAccount = customerAccount;
    }
    
    /**
     * Set the date property.
     * @param value the new value
     */
    public void setDate(final java.util.Date value) {
        this.date = value;
    }
    
    /**
     * Set the description property.
     * @param value the new value
     */
    public void setDescription(final java.lang.String value) {
        this.description = value;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Set the event property.
     * @param value the new value
     */
    public void setEvent(final java.lang.Long value) {
        this.event = value;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(final java.lang.Long value) {
        this.id = value;
    }
    
    // -------- Common Methods -----------
    
    public void setProfileId(final Long profileId) {
        this.profileId = profileId;
    }
    
    /**
     * Set the quantity property.
     * @param value the new value
     */
    public void setQuantity(final java.lang.Double value) {
        this.quantity = value;
    }
    
    /**
     * Set the type property.
     * @param value the new value
     */
    public void setType(final ru.cti.oss.cbe.customer.CustomerBillingEntryType value) {
        this.type = value;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        final StringBuilder sb = new StringBuilder();
        sb.append("CustomerBillingEntry(=");
        sb.append("date: ");
        sb.append(this.getDate());
        sb.append(", quantity: ");
        sb.append(this.getQuantity());
        sb.append(", description: ");
        sb.append(this.getDescription());
        sb.append(", type: ");
        sb.append(this.getType());
        sb.append(", event: ");
        sb.append(this.getEvent());
        sb.append(", id: ");
        sb.append(this.getId());
        sb.append(")");
        return sb.toString();
    }
}