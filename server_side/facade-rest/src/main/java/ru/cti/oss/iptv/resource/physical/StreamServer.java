// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.resource.physical;

/**
 * Autogenerated POJO EJB class for StreamServer containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "STREAM_SERVER")
@javax.persistence.NamedQueries
({
    @javax.persistence.NamedQuery(name = "StreamServer.findAll", query = "select streamServer from StreamServer AS streamServer"),
    @javax.persistence.NamedQuery(name = "StreamServer.findByName", query = "select streamServer from StreamServer AS streamServer where streamServer.name=:name")
})
public class StreamServer
    extends ru.cti.oss.iptv.resource.physical.Server
    implements java.io.Serializable
{

    private static final long serialVersionUID = 618391189435795833L;
    
    

    // --------- Relationship Definitions -----------

    

	private java.util.Set<ru.cti.oss.iptv.resource.logical.MulticastChannel> channels = new java.util.TreeSet<ru.cti.oss.iptv.resource.logical.MulticastChannel>();

    // ---- Manageable Display Attributes (Transient) -----


    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public StreamServer() {}

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param availabilityStatus Value for the availabilityStatus property
     * @param hostname Value for the hostname property
     */
    public StreamServer(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status, ru.cti.oss.cbe.datatypes.AvailabilityStatus availabilityStatus, java.lang.String hostname)
    {
        super(name, description, status, availabilityStatus, hostname);
        setName(name);
        setDescription(description);
        setStatus(status);
        setAvailabilityStatus(availabilityStatus);
        setHostname(hostname);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param availabilityStatus Value for the availabilityStatus property
     * @param hostname Value for the hostname property
     * @param channels Value for the channels relation
     */
    public StreamServer(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status, ru.cti.oss.cbe.datatypes.AvailabilityStatus availabilityStatus, java.lang.String hostname, java.util.Set<ru.cti.oss.iptv.resource.logical.MulticastChannel> channels)
    {
        setName(name);
        setDescription(description);
        setStatus(status);
        setAvailabilityStatus(availabilityStatus);
        setHostname(hostname);

        setChannels(channels);
    }


    // ------------- Relations ------------------

    /**
     * Get the channels Collection
     *
     * @return java.util.Set<ru.cti.oss.iptv.resource.logical.MulticastChannel>
     */
    @javax.persistence.OneToMany(mappedBy = "streamServer", fetch = javax.persistence.FetchType.LAZY)
    public java.util.Set<ru.cti.oss.iptv.resource.logical.MulticastChannel> getChannels()
    {
        return this.channels;
    }

    /**
     * Set the channels
     *
     * @param channels
     */
    public void setChannels (java.util.Set<ru.cti.oss.iptv.resource.logical.MulticastChannel> channels)
    {
        this.channels = channels;
    }

    /**
     * Add to channels
     *
     * @param multicastChannel
     */

    public void addToChannels (ru.cti.oss.iptv.resource.logical.MulticastChannel multicastChannel)
    {
        if (multicastChannel == null ) return;
        this.getChannels().add(multicastChannel);
        multicastChannel.setStreamServer(this);
    }

    /**
     * Remove from channels
     *
     * @param multicastChannel
     */

    public void removeFromChannels (ru.cti.oss.iptv.resource.logical.MulticastChannel multicastChannel)
    {
        if (multicastChannel == null ) return;
        this.getChannels().remove(multicastChannel);
        multicastChannel.setStreamServer(null);
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof StreamServer))
        {
            return false;
        }
        final StreamServer that = (StreamServer)object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode()
    {
        int hashCode = super.hashCode();
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString()
    {
        return super.toString();
    }

}