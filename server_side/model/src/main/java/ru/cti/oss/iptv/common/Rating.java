// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.common;

import javax.persistence.Column;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for Rating containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "RATING")
@javax.persistence.NamedQueries( { @javax.persistence.NamedQuery(name = "Rating.findAll", query = "select rating from Rating AS rating order by rating.level"),
        @javax.persistence.NamedQuery(name = "Rating.findRatingByLevel", query = "from Rating r where r.level= :level"),
        @javax.persistence.NamedQuery(name = "Rating.findRatingByName", query = "from Rating r where r.name= :name"),
        @javax.persistence.NamedQuery(name = "Rating.findBySystemId", query = "from Rating r where r.system.id= :systemId") })
public class Rating implements java.io.Serializable, Comparable < Rating >
{
    
    private static final long serialVersionUID = -3188576950991030629L;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String name;
    private java.lang.String code;
    private java.lang.String description;
    private java.lang.Long level;
    private java.util.Map < java.util.Locale, java.lang.String > i18nName;
    private java.util.Map < java.util.Locale, java.lang.String > i18nDescription;
    private java.lang.Long id;
    private java.lang.String externalId;
    
    // --------- Relationship Definitions -----------
    
    private ru.cti.oss.iptv.common.RatingSystem system;
    
    // ---- Manageable Display Attributes (Transient) -----
    
    // --------------- Constructors -----------------
    
    /**
     * Default empty constructor
     */
    public Rating() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param code Value for the code property
     * @param description Value for the description property
     * @param level Value for the level property
     */
    public Rating(java.lang.String name, java.lang.String code, java.lang.String description, java.lang.Long level) {
        setName(name);
        setCode(code);
        setDescription(description);
        setLevel(level);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param code Value for the code property
     * @param description Value for the description property
     * @param level Value for the level property
     * @param system Value for the system relation
     */
    public Rating(java.lang.String name, java.lang.String code, java.lang.String description, java.lang.Long level,
            ru.cti.oss.iptv.common.RatingSystem system) {
        setName(name);
        setCode(code);
        setDescription(description);
        setLevel(level);
        
        setSystem(system);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the externalId property.
     * 
     * @return java.lang.String The value of externalId
     */
    @javax.persistence.Column(name = "EXTERNAL_ID", unique = false, nullable = true, insertable = true, updatable = true)
    public java.lang.String getExternalId() {
        return this.externalId;
    }
    
    /**
     * Set the externalId property.
     * @param value the new value
     */
    public void setExternalId(final java.lang.String value) {
        this.externalId = value;
    }
    
    /**
     * Get the name property.
     * 
     * @return java.lang.String The value of name
     */
    @javax.persistence.Column(name = "NAME", nullable = false, insertable = true, updatable = true)
    @Index(name = "name_index")
    public java.lang.String getName() {
        return name;
    }
    
    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(java.lang.String value) {
        this.name = value;
    }
    
    /**
     * Get the code property.
     * 
     * @return java.lang.String The value of code
     */
    @javax.persistence.Column(name = "CODE", nullable = false, insertable = true, updatable = true)
    @Index(name = "code_index")
    public java.lang.String getCode() {
        return code;
    }
    
    /**
     * Set the code property.
     * @param value the new value
     */
    public void setCode(java.lang.String value) {
        this.code = value;
    }
    
    /**
     * Get the description property.
     * 
     * @return java.lang.String The value of description
     */
    @javax.persistence.Column(name = "DESCRIPTION", insertable = true, updatable = true)
    public java.lang.String getDescription() {
        return description;
    }
    
    /**
     * Set the description property.
     * @param value the new value
     */
    public void setDescription(java.lang.String value) {
        this.description = value;
    }
    
    @org.hibernate.annotations.CollectionOfElements
    @org.hibernate.annotations.MapKeyManyToMany
    @javax.persistence.JoinTable(name = "rating_i18n_name", joinColumns = { @javax.persistence.JoinColumn(name = "rating_id", nullable = false) })
    @org.hibernate.annotations.MapKey(columns = @Column(name = "mapkey", nullable = false))
    public java.util.Map < java.util.Locale, java.lang.String > getI18nName() {
        return i18nName;
    }
    
    public void setI18nName(java.util.Map < java.util.Locale, java.lang.String > i18nName) {
        this.i18nName = i18nName;
    }
    
    @org.hibernate.annotations.CollectionOfElements
    @Column(name = "element", length=3800 , nullable=false)
    @org.hibernate.annotations.MapKeyManyToMany
    @javax.persistence.JoinTable(name = "rating_i18n_description", joinColumns = { @javax.persistence.JoinColumn(name = "rating_id", nullable = false) })
    @org.hibernate.annotations.MapKey(columns = @Column(name = "mapkey", nullable = false))
    public java.util.Map < java.util.Locale, java.lang.String > getI18nDescription() {
        return i18nDescription;
    }
    
    public void setI18nDescription(java.util.Map < java.util.Locale, java.lang.String > i18nDescription) {
        this.i18nDescription = i18nDescription;
    }
    
    /**
     * Get the level property.
     * 
     * @return java.lang.Long The value of level
     */
    @javax.persistence.Column(name = "RATING_LEVEL", nullable = false, insertable = true, updatable = true)
    @Index(name = "level_index")
    public java.lang.Long getLevel() {
        return level;
    }
    
    /**
     * Set the level property.
     * @param value the new value
     */
    public void setLevel(java.lang.Long value) {
        this.level = value;
    }
    
    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    @Index(name = "id_index")
    public java.lang.Long getId() {
        return id;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        this.id = value;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Get the system
     *
     * @return ru.cti.oss.iptv.common.RatingSystem
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.EAGER)
    @javax.persistence.JoinColumn(name = "RATING_SYSTEM")
    public ru.cti.oss.iptv.common.RatingSystem getSystem() {
        return this.system;
    }
    
    /**
     * Set the system
     *
     * @param system
     */
    public void setSystem(ru.cti.oss.iptv.common.RatingSystem system) {
        this.system = system;
    }
    
    // -------- Common Methods -----------
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof Rating)) {
            return false;
        }
        final Rating that = (Rating) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("Rating(=");
        sb.append("name: ");
        sb.append(getName());
        sb.append(", code: ");
        sb.append(getCode());
        sb.append(", description: ");
        sb.append(getDescription());
        sb.append(", level: ");
        sb.append(getLevel());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(Rating o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getName() != null) {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getCode() != null) {
                cmp = (cmp != 0 ? cmp : this.getCode().compareTo(o.getCode()));
            }
            if (this.getDescription() != null) {
                cmp = (cmp != 0 ? cmp : this.getDescription().compareTo(o.getDescription()));
            }
            if (this.getLevel() != null) {
                cmp = (cmp != 0 ? cmp : this.getLevel().compareTo(o.getLevel()));
            }
        }
        return cmp;
    }
}