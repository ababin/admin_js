// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.epg;

import javax.persistence.FetchType;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for EpgMapping containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "EPG_MAPPING")
@javax.persistence.NamedQueries( {
        @javax.persistence.NamedQuery(name = "EpgMapping.findAll", query = "select epgMapping from EpgMapping AS epgMapping"),
        @javax.persistence.NamedQuery(name = "EpgMapping.findByProviderAndName", query = "from EpgMapping where externalChannelName = :name and provider.name = :provider") })
public class EpgMapping implements java.io.Serializable, Comparable < EpgMapping >
{
    
    private static final long serialVersionUID = -5392987803843329145L;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String externalChannelName;
    private java.lang.Integer timeOffset;
    private java.lang.Long id;
    
    // --------- Relationship Definitions -----------
    
    private ru.cti.oss.iptv.epg.EpgProvider provider;
    private ru.cti.oss.iptv.resource.logical.BtvChannel channel;
    
    // ---- Manageable Display Attributes (Transient) -----
    
    private java.lang.String providerLabel; // Manageable display attribute
    
    // --------------- Constructors -----------------
    
    /**
     * Default empty constructor
     */
    public EpgMapping() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param externalChannelName Value for the externalChannelName property
     * @param timeOffset Value for the timeOffset property
     */
    public EpgMapping(java.lang.String externalChannelName, java.lang.Integer timeOffset) {
        setExternalChannelName(externalChannelName);
        setTimeOffset(timeOffset);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param externalChannelName Value for the externalChannelName property
     * @param timeOffset Value for the timeOffset property
     * @param provider Value for the provider relation
     * @param channel Value for the channel relation
     */
    public EpgMapping(java.lang.String externalChannelName, java.lang.Integer timeOffset, ru.cti.oss.iptv.epg.EpgProvider provider,
            ru.cti.oss.iptv.resource.logical.BtvChannel channel) {
        setExternalChannelName(externalChannelName);
        setTimeOffset(timeOffset);
        
        setProvider(provider);
        setChannel(channel);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the externalChannelName property.
     * 
     * @return java.lang.String The value of externalChannelName
     */
    @javax.persistence.Column(name = "EXTERNAL_CHANNEL_NAME", nullable = false, insertable = true, updatable = true)
    public java.lang.String getExternalChannelName() {
        return externalChannelName;
    }
    
    /**
     * Set the externalChannelName property.
     * @param value the new value
     */
    public void setExternalChannelName(java.lang.String value) {
        this.externalChannelName = value;
    }
    
    /**
     * Get the timeOffset property.
     * 
     * @return java.lang.Integer The value of timeOffset
     */
    @javax.persistence.Column(name = "TIME_OFFSET", nullable = false, insertable = true, updatable = true)
    public java.lang.Integer getTimeOffset() {
        return timeOffset;
    }
    
    /**
     * Set the timeOffset property.
     * @param value the new value
     */
    public void setTimeOffset(java.lang.Integer value) {
        this.timeOffset = value;
    }
    
    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    @Index(name = "id_index")
    public java.lang.Long getId() {
        return id;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        this.id = value;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Get the provider
     *
     * @return ru.cti.oss.iptv.epg.EpgProvider
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "PROVIDER")
    public ru.cti.oss.iptv.epg.EpgProvider getProvider() {
        return this.provider;
    }
    
    /**
     * Set the provider
     *
     * @param provider
     */
    public void setProvider(ru.cti.oss.iptv.epg.EpgProvider provider) {
        this.provider = provider;
    }
    
    /**
     * Get the channel
     *
     * @return ru.cti.oss.iptv.resource.logical.BtvChannel
     */
    @javax.persistence.ManyToOne(optional = false, fetch = FetchType.EAGER)
    @javax.persistence.JoinColumn(name = "CHANNEL")
    public ru.cti.oss.iptv.resource.logical.BtvChannel getChannel() {
        return this.channel;
    }
    
    /**
     * Set the channel
     *
     * @param channel
     */
    public void setChannel(ru.cti.oss.iptv.resource.logical.BtvChannel channel) {
        this.channel = channel;
    }
    
    // -------- Manageable Attribute Display -----------
    
    /**
     * Get the providerLabel
     *
     * @return java.lang.String
     */
    @javax.persistence.Transient
    public java.lang.String getProviderLabel() {
        return this.providerLabel;
    }
    
    /**
     * Set the providerLabel
     *
     * @param providerLabel
     */
    public void setProviderLabel(java.lang.String providerLabel) {
        this.providerLabel = providerLabel;
    }
    
    // -------- Common Methods -----------
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof EpgMapping)) {
            return false;
        }
        final EpgMapping that = (EpgMapping) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("EpgMapping(=");
        sb.append("externalChannelName: ");
        sb.append(getExternalChannelName());
        sb.append(", timeOffset: ");
        sb.append(getTimeOffset());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(EpgMapping o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getExternalChannelName() != null) {
                cmp = (cmp != 0 ? cmp : this.getExternalChannelName().compareTo(o.getExternalChannelName()));
            }
            if (this.getTimeOffset() != null) {
                cmp = (cmp != 0 ? cmp : this.getTimeOffset().compareTo(o.getTimeOffset()));
            }
        }
        return cmp;
    }
}