// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.resource.logical.add;

/**
 * Autogenerated POJO EJB class for UnlinkedAsset containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "UNLINKED_ASSET")
@javax.persistence.NamedQuery(name = "UnlinkedAsset.findAll", query = "select unlinkedAsset from UnlinkedAsset AS unlinkedAsset")
public class UnlinkedAsset
    implements java.io.Serializable, Comparable<UnlinkedAsset>
{

    private static final long serialVersionUID = -7793527023116497112L;

    // ----------- Attribute Definitions ------------

    private java.lang.String fileName;
    private java.lang.Integer attemptsRemain;
    private java.lang.Long id;


    // --------- Relationship Definitions -----------

    private ru.cti.oss.iptv.resource.physical.VideoServer videoServer;

    // ---- Manageable Display Attributes (Transient) -----


    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public UnlinkedAsset() {}

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param fileName Value for the fileName property
     * @param attemptsRemain Value for the attemptsRemain property
     */
    public UnlinkedAsset(java.lang.String fileName, java.lang.Integer attemptsRemain)
    {
        setFileName(fileName);
        setAttemptsRemain(attemptsRemain);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param fileName Value for the fileName property
     * @param attemptsRemain Value for the attemptsRemain property
     * @param videoServer Value for the videoServer relation
     */
    public UnlinkedAsset(java.lang.String fileName, java.lang.Integer attemptsRemain, ru.cti.oss.iptv.resource.physical.VideoServer videoServer)
    {
        setFileName(fileName);
        setAttemptsRemain(attemptsRemain);

        setVideoServer(videoServer);
    }


    // -------- Attribute Accessors ----------

    /**
     * Get the fileName property.
     * 
     * @return java.lang.String The value of fileName
     */
    	@javax.persistence.Column(name = "FILE_NAME", nullable = false, insertable = true, updatable = true)
    public java.lang.String getFileName()
    {
        return fileName;
    }

    /**
     * Set the fileName property.
     * @param value the new value
     */
    public void setFileName(java.lang.String value)
    {
        this.fileName = value;
    }

    /**
     * Get the attemptsRemain property.
     * 
     * @return java.lang.Integer The value of attemptsRemain
     */
    	@javax.persistence.Column(name = "ATTEMPTS_REMAIN", nullable = false, insertable = true, updatable = true)
    public java.lang.Integer getAttemptsRemain()
    {
        return attemptsRemain;
    }

    /**
     * Set the attemptsRemain property.
     * @param value the new value
     */
    public void setAttemptsRemain(java.lang.Integer value)
    {
        this.attemptsRemain = value;
    }

    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    	@javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    public java.lang.Long getId()
    {
        return id;
    }

    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value)
    {
        this.id = value;
    }


    // ------------- Relations ------------------

    /**
     * Get the videoServer
     *
     * @return ru.cti.oss.iptv.resource.physical.VideoServer
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "VIDEOSERVER")
    public ru.cti.oss.iptv.resource.physical.VideoServer getVideoServer()
    {
        return this.videoServer;
    }

   /**
    * Set the videoServer
    *
    * @param videoServer
    */
    public void setVideoServer(ru.cti.oss.iptv.resource.physical.VideoServer videoServer)
    {
        this.videoServer = videoServer;
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof UnlinkedAsset))
        {
            return false;
        }
        final UnlinkedAsset that = (UnlinkedAsset)object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("UnlinkedAsset(=");
        sb.append("fileName: ");
        sb.append(getFileName());
        sb.append(", attemptsRemain: ");
        sb.append(getAttemptsRemain());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }

    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(UnlinkedAsset o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getFileName() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getFileName().compareTo(o.getFileName()));
            }
            if (this.getAttemptsRemain() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getAttemptsRemain().compareTo(o.getAttemptsRemain()));
            }
        }
        return cmp;
    }
}