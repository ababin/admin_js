// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.resource.logical;

/**
 * Autogenerated POJO EJB class for NvodChannel containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "NVOD_CHANNEL")
@javax.persistence.NamedQueries
({
    @javax.persistence.NamedQuery(name = "NvodChannel.findAll", query = "select nvodChannel from NvodChannel AS nvodChannel"),
    @javax.persistence.NamedQuery(name = "NvodChannel.findByStatus", query = "from NvodChannel as nvodChannel where nvodChannel.status = :status")
})
public class NvodChannel
    extends ru.cti.oss.iptv.resource.logical.MediaContent
    implements java.io.Serializable
{

    private static final long serialVersionUID = 2865639175617266026L;

    // ----------- Attribute Definitions ------------

    private java.lang.Long scheduleInterval;


    // --------- Relationship Definitions -----------

    private java.util.Set<ru.cti.oss.iptv.resource.logical.NvodShow> nvodShows = new java.util.TreeSet<ru.cti.oss.iptv.resource.logical.NvodShow>();
    private java.util.Set<ru.cti.oss.iptv.resource.physical.VideoServer> videoservers = new java.util.TreeSet<ru.cti.oss.iptv.resource.physical.VideoServer>();

    // ---- Manageable Display Attributes (Transient) -----


    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public NvodChannel() {}

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param scheduleInterval Value for the scheduleInterval property
     */
    public NvodChannel(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status, java.lang.Long scheduleInterval)
    {
        super(name, description, status);
        setName(name);
        setDescription(description);
        setStatus(status);
        setScheduleInterval(scheduleInterval);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param scheduleInterval Value for the scheduleInterval property
     * @param nvodShows Value for the nvodShows relation
     * @param videoservers Value for the videoservers relation
     */
    public NvodChannel(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status, java.lang.Long scheduleInterval, java.util.Set<ru.cti.oss.iptv.resource.logical.NvodShow> nvodShows, java.util.Set<ru.cti.oss.iptv.resource.physical.VideoServer> videoservers)
    {
        setName(name);
        setDescription(description);
        setStatus(status);
        setScheduleInterval(scheduleInterval);

        setNvodShows(nvodShows);
        setVideoservers(videoservers);
    }


    // -------- Attribute Accessors ----------

    /**
     * Get the scheduleInterval property.
     * 
     * @return java.lang.Long The value of scheduleInterval
     */
    	@javax.persistence.Column(name = "SCHEDULE_INTERVAL", nullable = false, insertable = true, updatable = true)
    public java.lang.Long getScheduleInterval()
    {
        return scheduleInterval;
    }

    /**
     * Set the scheduleInterval property.
     * @param value the new value
     */
    public void setScheduleInterval(java.lang.Long value)
    {
        this.scheduleInterval = value;
    }


    // ------------- Relations ------------------

    /**
     * Get the nvodShows Collection
     *
     * @return java.util.Set<ru.cti.oss.iptv.resource.logical.NvodShow>
     */
    @javax.persistence.OneToMany(mappedBy = "nvodChannel", fetch = javax.persistence.FetchType.LAZY)
    public java.util.Set<ru.cti.oss.iptv.resource.logical.NvodShow> getNvodShows()
    {
        return this.nvodShows;
    }

    /**
     * Set the nvodShows
     *
     * @param nvodShows
     */
    public void setNvodShows (java.util.Set<ru.cti.oss.iptv.resource.logical.NvodShow> nvodShows)
    {
        this.nvodShows = nvodShows;
    }

    /**
     * Add to nvodShows
     *
     * @param nvodShow
     */

    public void addToNvodShows (ru.cti.oss.iptv.resource.logical.NvodShow nvodShow)
    {
        if (nvodShow == null ) return;
        this.getNvodShows().add(nvodShow);
        nvodShow.setNvodChannel(this);
    }

    /**
     * Remove from nvodShows
     *
     * @param nvodShow
     */

    public void removeFromNvodShows (ru.cti.oss.iptv.resource.logical.NvodShow nvodShow)
    {
        if (nvodShow == null ) return;
        this.getNvodShows().remove(nvodShow);
        nvodShow.setNvodChannel(null);
    }

    /**
     * Get the videoservers Collection
     *
     * @return java.util.Set<ru.cti.oss.iptv.resource.physical.VideoServer>
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinTable
    (
        name = "NVOD_CHANNELS2VIDEOSERVERS",
        joinColumns = {@javax.persistence.JoinColumn(name = "NVOD_CHANNEL_IDC", referencedColumnName = "ID")},
        inverseJoinColumns = {@javax.persistence.JoinColumn(name = "VIDEO_SERVER_IDC", referencedColumnName = "ID")}
    )
    public java.util.Set<ru.cti.oss.iptv.resource.physical.VideoServer> getVideoservers()
    {
        return this.videoservers;
    }

    /**
     * Set the videoservers
     *
     * @param videoservers
     */
    public void setVideoservers (java.util.Set<ru.cti.oss.iptv.resource.physical.VideoServer> videoservers)
    {
        this.videoservers = videoservers;
    }

    /**
     * Add VideoServer
     *
     * @param videoServer
     */

    public void addToVideoservers(ru.cti.oss.iptv.resource.physical.VideoServer videoServer)
    {
        if (videoServer == null ) return;
        this.getVideoservers().add(videoServer);
    }

    /**
     * Remove VideoServer
     *
     * @param videoServer
     */

    public void removeFromVideoservers (ru.cti.oss.iptv.resource.physical.VideoServer videoServer)
    {
        if (videoServer == null ) return;
        this.getVideoservers().remove(videoServer);
    }

    /* (non-Javadoc)
     * @see ru.cti.oss.iptv.resource.logical.MediaContent#getMediaSource()
     */
    @Deprecated
    @javax.persistence.Transient
    public ru.cti.oss.iptv.resource.logical.MediaSource getMediaSource() {
		return MediaContentToDefaultMediaSourceHelper.getDefaultMulticastChannel(this.getMediaSources());
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof NvodChannel))
        {
            return false;
        }
        final NvodChannel that = (NvodChannel)object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode()
    {
        int hashCode = super.hashCode();
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("NvodChannel(=");
        sb.append(super.toString());
        sb.append("scheduleInterval: ");
        sb.append(getScheduleInterval());
        sb.append(")");
        return sb.toString();
    }

}