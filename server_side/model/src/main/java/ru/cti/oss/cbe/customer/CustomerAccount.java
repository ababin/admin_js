// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.cbe.customer;

import javax.persistence.CascadeType;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for CustomerAccount containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 *
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "CUSTOMER_ACCOUNT")
@javax.persistence.NamedQueries({
	@javax.persistence.NamedQuery(name = "CustomerAccount.findAll", query = "select customerAccount from CustomerAccount AS customerAccount"),
	@javax.persistence.NamedQuery(name = "CustomerAccount.findByIds", query = "select customerAccount from CustomerAccount AS customerAccount where customerAccount.id in (:ids)"),
	@javax.persistence.NamedQuery(name = "CustomerAccount.findAllIds", query = "select customerAccount.id from CustomerAccount AS customerAccount"),
	@javax.persistence.NamedQuery(name = "CustomerAccount.findAllIdsByCustomerIds", query = "select customerAccount.id from CustomerAccount AS customerAccount where customerAccount.customer.id in (:ids)"),
	@javax.persistence.NamedQuery(name = "CustomerAccount.findAllIdsByCustomerId", query = "select customerAccount.id from CustomerAccount AS customerAccount where customerAccount.customer.id = (:ID)"),
	@javax.persistence.NamedQuery(name = "CustomerAccount.findAllIdsByCustomerAccountName", query = "select customerAccount.id from CustomerAccount AS customerAccount where customerAccount.name = (:NAME)"),
	@javax.persistence.NamedQuery(name = "CustomerAccount.findAllByCustomerAccountName", query = "select customerAccount from CustomerAccount AS customerAccount where customerAccount.name = (:NAME)"),
	@javax.persistence.NamedQuery(name = "CustomerAccount.findAllIdsByCustomerName", query = "select customerAccount.id from CustomerAccount AS customerAccount where customerAccount.customer.name = (:NAME)")
})
public class CustomerAccount implements java.io.Serializable, Comparable < CustomerAccount >
{
    
    private static final long serialVersionUID = -7162858601427748315L;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String name;
    private ru.cti.oss.cbe.customer.CustomerAccountStatus accountStatus;
    private java.lang.Boolean masterAccount;
    private java.lang.String pin;
    private java.lang.Double accountLimit;
    private java.lang.Double accountBalance;
    private java.lang.String skin;
    private java.util.Locale locale;
    private java.lang.Long id;
    private java.lang.String externalId;
    
    // --------- Relationship Definitions -----------
    
    private ru.cti.oss.cbe.customer.Customer customer;
    private ru.cti.oss.iptv.common.Rating rating;
    
    private ru.cti.oss.cbe.customer.Pictogram pictogram;
    
    private java.util.Set < ru.cti.oss.cbe.customer.Option > options = new java.util.TreeSet < ru.cti.oss.cbe.customer.Option >();
    private java.util.Set < ru.cti.oss.cbe.customer.DataItem > items = new java.util.TreeSet < ru.cti.oss.cbe.customer.DataItem >();
    private java.lang.String customerLabel; // Manageable display attribute
    
    // --------------- Constructors -----------------
    /**
     * Default empty constructor
     */
    public CustomerAccount() {
    }
    
    // ---- Manageable Display Attributes (Transient) -----
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param accountStatus Value for the accountStatus property
     * @param masterAccount Value for the masterAccount property
     * @param pin Value for the pin property
     * @param accountLimit Value for the accountLimit property
     * @param accountBalance Value for the accountBalance property
     * @param skin Value for the skin property
     */
    public CustomerAccount(java.lang.String name, ru.cti.oss.cbe.customer.CustomerAccountStatus accountStatus,
            java.lang.Boolean masterAccount, java.lang.String pin, java.lang.Double accountLimit,
            java.lang.Double accountBalance, java.lang.String skin) {
        this.setName(name);
        this.setAccountStatus(accountStatus);
        this.setMasterAccount(masterAccount);
        this.setPin(pin);
        this.setAccountLimit(accountLimit);
        this.setAccountBalance(accountBalance);
        this.setSkin(skin);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param accountStatus Value for the accountStatus property
     * @param masterAccount Value for the masterAccount property
     * @param pin Value for the pin property
     * @param accountLimit Value for the accountLimit property
     * @param accountBalance Value for the accountBalance property
     * @param skin Value for the skin property
     * @param customer Value for the customer relation
     * @param rating Value for the rating relation
     * @param pictogram Value for the pictogram relation
     * @param options Value for the options relation
     * @param items Value for the items relation
     */
    public CustomerAccount(java.lang.String name, ru.cti.oss.cbe.customer.CustomerAccountStatus accountStatus,
            java.lang.Boolean masterAccount, java.lang.String pin, java.lang.Double accountLimit,
            java.lang.Double accountBalance, java.lang.String skin, ru.cti.oss.cbe.customer.Customer customer,
            ru.cti.oss.iptv.common.Rating rating, ru.cti.oss.cbe.customer.Pictogram pictogram,
            java.util.Set < ru.cti.oss.cbe.customer.Option > options, java.util.Set < ru.cti.oss.cbe.customer.DataItem > items) {
        this.setName(name);
        this.setAccountStatus(accountStatus);
        this.setMasterAccount(masterAccount);
        this.setPin(pin);
        this.setAccountLimit(accountLimit);
        this.setAccountBalance(accountBalance);
        this.setSkin(skin);
        
        this.setCustomer(customer);
        this.setRating(rating);
        this.setPictogram(pictogram);
        this.setOptions(options);
        this.setItems(items);
    }
    
    /**
     * Get the externalId property.
     * 
     * @return java.lang.String The value of externalId
     */
    @javax.persistence.Column(name = "EXTERNAL_ID", unique = false, nullable = true, insertable = true, updatable = true)
    public java.lang.String getExternalId() {
        return this.externalId;
    }
    
    /**
     * Set the externalId property.
     * @param value the new value
     */
    public void setExternalId(final java.lang.String value) {
        this.externalId = value;
    }
    
    /**
     * Add to items
     *
     * @param dataItem
     */
    
    public void addToItems(ru.cti.oss.cbe.customer.DataItem dataItem) {
        if (dataItem == null) {
            return;
        }
        this.getItems().add(dataItem);
        dataItem.setAccount(this);
    }
    
    /**
     * Add to options
     *
     * @param option
     */
    
    public void addToOptions(ru.cti.oss.cbe.customer.Option option) {
        if (option == null) {
            return;
        }
        this.getOptions().add(option);
        option.setAccount(this);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(CustomerAccount o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getName() != null) {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getAccountStatus() != null) {
                cmp = (cmp != 0 ? cmp : this.getAccountStatus().compareTo(o.getAccountStatus()));
            }
            if (this.getMasterAccount() != null) {
                cmp = (cmp != 0 ? cmp : this.getMasterAccount().compareTo(o.getMasterAccount()));
            }
            if (this.getPin() != null) {
                cmp = (cmp != 0 ? cmp : this.getPin().compareTo(o.getPin()));
            }
            if (this.getAccountLimit() != null) {
                cmp = (cmp != 0 ? cmp : this.getAccountLimit().compareTo(o.getAccountLimit()));
            }
            if (this.getAccountBalance() != null) {
                cmp = (cmp != 0 ? cmp : this.getAccountBalance().compareTo(o.getAccountBalance()));
            }
            if (this.getSkin() != null) {
                cmp = (cmp != 0 ? cmp : this.getSkin().compareTo(o.getSkin()));
            }
        }
        return cmp;
    }
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof CustomerAccount)) {
            return false;
        }
        final CustomerAccount that = (CustomerAccount) object;
        if ((this.getId() == null) || (that.getId() == null) || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Get the accountBalance property.
     *
     * @return java.lang.Double The value of accountBalance
     */
    @javax.persistence.Column(name = "ACCOUNT_BALANCE", nullable = false, insertable = true, updatable = true)
    @Index(name = "account_balance_index")
    public java.lang.Double getAccountBalance() {
        return this.accountBalance;
    }
    
    /**
     * Get the accountLimit property.
     *
     * @return java.lang.Double The value of accountLimit
     */
    @javax.persistence.Column(name = "ACCOUNT_LIMIT", nullable = false, insertable = true, updatable = true)
    @Index(name = "account_limit_index")
    public java.lang.Double getAccountLimit() {
        return this.accountLimit;
    }
    
    /**
     * Get the accountStatus property.
     *
     * @return ru.cti.oss.cbe.customer.CustomerAccountStatus The value of accountStatus
     */
    @javax.persistence.Column(name = "ACCOUNT_STATUS", insertable = true, updatable = true)
    @javax.persistence.Enumerated(javax.persistence.EnumType.STRING)
    @Index(name = "account_status_index")
    public ru.cti.oss.cbe.customer.CustomerAccountStatus getAccountStatus() {
        return this.accountStatus;
    }
    
    /**
     * Get the customer
     *
     * @return ru.cti.oss.cbe.customer.Customer
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.EAGER)
    @javax.persistence.JoinColumn(name = "CUSTOMER")
    @Index(name = "customer_index")
    public ru.cti.oss.cbe.customer.Customer getCustomer() {
        return this.customer;
    }
    
    /**
     * Get the customerLabel
     *
     * @return java.lang.String
     */
    @javax.persistence.Transient
    public java.lang.String getCustomerLabel() {
        return this.customerLabel;
    }
    
    /**
     * Get the id property.
     *
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    @Index(name = "id_index")
    public java.lang.Long getId() {
        return this.id;
    }
    
    /**
     * Get the items Collection
     *
     * @return java.util.Set<ru.cti.oss.cbe.customer.DataItem>
     */
    @javax.persistence.OneToMany(cascade = { CascadeType.MERGE, CascadeType.REMOVE, CascadeType.REFRESH }, mappedBy = "account", fetch = javax.persistence.FetchType.LAZY)
    @Index(name = "items_index")
    public java.util.Set < ru.cti.oss.cbe.customer.DataItem > getItems() {
        return this.items;
    }
    
    /**
     * Get the locale property.
     *
     * @return java.util.Locale The value of locale
     */
    @javax.persistence.Column(name = "LOCALE", nullable = false, insertable = true, updatable = true)
    @Index(name = "locale_index")
    public java.util.Locale getLocale() {
        return this.locale;
    }
    
    /**
     * Get the masterAccount property.
     *
     * @return java.lang.Boolean The value of masterAccount
     */
    @javax.persistence.Column(name = "MASTER_ACCOUNT", nullable = false, insertable = true, updatable = true)
    @Index(name = "master_account_index")
    public java.lang.Boolean getMasterAccount() {
        return this.masterAccount;
    }
    
    /**
     * Get the name property.
     *
     * @return java.lang.String The value of name
     */
    @javax.persistence.Column(name = "NAME", nullable = false, insertable = true, updatable = true)
    @Index(name = "name_index")
    public java.lang.String getName() {
        return this.name;
    }
    
    /**
     * Get the options Collection
     *
     * @return java.util.Set<ru.cti.oss.cbe.customer.Option>
     */
    @javax.persistence.OneToMany(cascade = { CascadeType.MERGE, CascadeType.REMOVE, CascadeType.REFRESH }, mappedBy = "account", fetch = javax.persistence.FetchType.LAZY)
    public java.util.Set < ru.cti.oss.cbe.customer.Option > getOptions() {
        return this.options;
    }
    
    /**
     * Get the pictogram
     *
     * @return ru.cti.oss.cbe.customer.Pictogram
     */
    @javax.persistence.OneToOne(fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "PICTOGRAM")
    public ru.cti.oss.cbe.customer.Pictogram getPictogram() {
        return this.pictogram;
    }
    
    /**
     * Get the pin property.
     *
     * @return java.lang.String The value of pin
     */
    @javax.persistence.Column(name = "PIN", insertable = true, updatable = true)
    @Index(name = "pin_index")
    public java.lang.String getPin() {
        return this.pin;
    }
    
    /**
     * Get the rating
     *
     * @return ru.cti.oss.iptv.common.Rating
     */
    @javax.persistence.OneToOne(fetch = javax.persistence.FetchType.EAGER)
    @javax.persistence.JoinColumn(name = "RATING")
    @Index(name = "rating_index")
    public ru.cti.oss.iptv.common.Rating getRating() {
        return this.rating;
    }
    
    /**
     * Get the skin property.
     *
     * @return java.lang.String The value of skin
     */
    @javax.persistence.Column(name = "SKIN", insertable = true, updatable = true)
    public java.lang.String getSkin() {
        return this.skin;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (this.getId() == null ? 0 : this.getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Remove from items
     *
     * @param dataItem
     */
    
    public void removeFromItems(ru.cti.oss.cbe.customer.DataItem dataItem) {
        if (dataItem == null) {
            return;
        }
        this.getItems().remove(dataItem);
        dataItem.setAccount(null);
    }
    
    /**
     * Remove from options
     *
     * @param option
     */
    
    public void removeFromOptions(ru.cti.oss.cbe.customer.Option option) {
        if (option == null) {
            return;
        }
        this.getOptions().remove(option);
        option.setAccount(null);
    }
    
    /**
     * Set the accountBalance property.
     * @param value the new value
     */
    public void setAccountBalance(java.lang.Double value) {
        this.accountBalance = value;
    }
    
    /**
     * Set the accountLimit property.
     * @param value the new value
     */
    public void setAccountLimit(java.lang.Double value) {
        this.accountLimit = value;
    }
    
    /**
     * Set the accountStatus property.
     * @param value the new value
     */
    public void setAccountStatus(ru.cti.oss.cbe.customer.CustomerAccountStatus value) {
        this.accountStatus = value;
    }
    
    /**
     * Set the customer
     *
     * @param customer
     */
    public void setCustomer(ru.cti.oss.cbe.customer.Customer customer) {
        this.customer = customer;
    }
    
    /**
     * Set the customerLabel
     *
     * @param customerLabel
     */
    public void setCustomerLabel(java.lang.String customerLabel) {
        this.customerLabel = customerLabel;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        this.id = value;
    }
    
    /**
     * Set the items
     *
     * @param items
     */
    public void setItems(java.util.Set < ru.cti.oss.cbe.customer.DataItem > items) {
        this.items = items;
    }
    
    /**
     * Set the locale property.
     * @param value the new value
     */
    public void setLocale(java.util.Locale value) {
        this.locale = value;
    }
    
    /**
     * Set the masterAccount property.
     * @param value the new value
     */
    public void setMasterAccount(java.lang.Boolean value) {
        this.masterAccount = value;
    }
    
    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(java.lang.String value) {
        this.name = value;
    }
    
    // -------- Manageable Attribute Display -----------
    
    /**
     * Set the options
     *
     * @param options
     */
    public void setOptions(java.util.Set < ru.cti.oss.cbe.customer.Option > options) {
        this.options = options;
    }
    
    /**
     * Set the pictogram
     *
     * @param pictogram
     */
    public void setPictogram(ru.cti.oss.cbe.customer.Pictogram pictogram) {
        this.pictogram = pictogram;
    }
    
    // -------- Common Methods -----------
    
    /**
     * Set the pin property.
     * @param value the new value
     */
    public void setPin(java.lang.String value) {
        this.pin = value;
    }
    
    /**
     * Set the rating
     *
     * @param rating
     */
    public void setRating(ru.cti.oss.iptv.common.Rating rating) {
        this.rating = rating;
    }
    
    /**
     * Set the skin property.
     * @param value the new value
     */
    public void setSkin(java.lang.String value) {
        this.skin = value;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("CustomerAccount(=");
        sb.append("name: ");
        sb.append(this.getName());
        sb.append(", accountStatus: ");
        sb.append(this.getAccountStatus());
        sb.append(", masterAccount: ");
        sb.append(this.getMasterAccount());
        sb.append(", pin: ");
        sb.append(this.getPin());
        sb.append(", accountLimit: ");
        sb.append(this.getAccountLimit());
        sb.append(", accountBalance: ");
        sb.append(this.getAccountBalance());
        sb.append(", skin: ");
        sb.append(this.getSkin());
        sb.append(", id: ");
        sb.append(this.getId());
        sb.append(")");
        return sb.toString();
    }
}