-  рефакторинг windows. Убрать ненужный функционал. (ЕСТЬ)
-  пейджинация (ЕСТЬ)
-  допилить редактирование сущности
-  отработать удаление сущности
-  необходимо написать реальные загрлушки для операций
-  продумать работу с УРЛами для различных операций.
-  приделать отображение загрузки (активности запроса на сервер) данных.
 







АРХИТЕКТУРА
_____________________________________

Таблицы могут быть:

1. с возможностью выбора нескольких значений
2. выбор только одного значения



Модель (дескриптор поля):
-------------------------------------------------------------
1. type (обязательное) - тип поля. Существует два вида типов: встроенные и модельные.

2. multitude (не обязательное, значение по умолчанию: alone) - "set" - определяет, что представлено в виде набора данных. 
При отсутствии - считается, что значение одно

3. isIdentifier (не обязательное, значение по умоланию - false) - определяет, значение представлено в виде идентификатора. 
В противном случае значение представлено объектом с полями 

4. pageable (не обязательное, значение по умолчанию - false) - определяет, нужна ли пейджинация при отображении табличных
данных. Имеет смысл, если указан параметр multitude='set' или multitude='list'.
 
5. isComposition (не обязательно, значение по умолчанию - false) - определяет, является ли данная сущность композицией родительского объекта. Другими словами
значение созадется ОТДЕЛЬНО, или берется из справочника !

6. isDetached (не обязательно, значение по умолчанию - false) - определяет, нужно ли подгружать сущность ПОЛНОСТЬЮ,
или все данные уже есть в самом объекте. Например, если у нас есть идентификаторы или неполные сущности, 
то isDetached необходимо установить в true. В противном случае - поле не требуется 

7. isNullable (не обязательно, значение по умолчанию - true) - может ил значение принимать нулевое или пустое значение. Если поле обязательно
к заполнению, то необходимо nullable устанавливать в false


ПАРАМЕТРЫ СУЩНОСТИ МОДЕЛИ:
1. pagedLoading (не обязательно, по умолчанию - true) - определяет, используется ли пейджинация данных при загрузке.




правила формирования ID для дивов
id  = div_<window_level>_<entityClass>_<fieldName>_<recId>





Логика работы операций CRUD
----------------------------------------------------------------------------------------------------------------------------------------------
1. При клике по сущности появляется окно с подробной информацией по сущности.
В верхней части отображается заголовок с типом сущности, например: "BTV-канал". 
В заголовке справа - иконки РЕДАКТИРОВАТЬ
Нижняя панель (режимы):
- чтение - ОК
- редактирование - СОХРАНИТЬ ОТМЕНА
- создание - СОХРАНИТЬ ОТМЕНА




