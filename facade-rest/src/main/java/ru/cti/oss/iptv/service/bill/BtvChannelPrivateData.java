// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.service.bill;

/**
 * Autogenerated POJO EJB class for BtvChannelPrivateData containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "BTV_CHANNEL_PRIVATE_DATA")
@javax.persistence.NamedQueries
({
    @javax.persistence.NamedQuery(name = "BtvChannelPrivateData.findAll", query = "select btvChannelPrivateData from BtvChannelPrivateData AS btvChannelPrivateData"),
    @javax.persistence.NamedQuery(name = "BtvChannelPrivateData.findByCustomerAccount", query = "select prd from BtvChannelPrivateData prd where prd.customerAccount.id= :account order by prd.sortOrder")
})
public class BtvChannelPrivateData
    implements java.io.Serializable, Comparable<BtvChannelPrivateData>
{

    private static final long serialVersionUID = -2367769840097481301L;

    // ----------- Attribute Definitions ------------

    private java.lang.Long btvChannelId;
    private java.lang.Integer sortOrder;
    private java.lang.Boolean skipped;
    private java.lang.Long id;


    // --------- Relationship Definitions -----------

    private ru.cti.oss.cbe.customer.CustomerAccount customerAccount;

    // ---- Manageable Display Attributes (Transient) -----


    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public BtvChannelPrivateData() {}

    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param btvChannelId Value for the btvChannelId property
     * @param sortOrder Value for the sortOrder property
     * @param skipped Value for the skipped property
     */
    public BtvChannelPrivateData(java.lang.Long btvChannelId, java.lang.Integer sortOrder, java.lang.Boolean skipped)
    {
        setBtvChannelId(btvChannelId);
        setSortOrder(sortOrder);
        setSkipped(skipped);
    }

    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param btvChannelId Value for the btvChannelId property
     * @param sortOrder Value for the sortOrder property
     * @param skipped Value for the skipped property
     * @param customerAccount Value for the customerAccount relation
     */
    public BtvChannelPrivateData(java.lang.Long btvChannelId, java.lang.Integer sortOrder, java.lang.Boolean skipped, ru.cti.oss.cbe.customer.CustomerAccount customerAccount)
    {
        setBtvChannelId(btvChannelId);
        setSortOrder(sortOrder);
        setSkipped(skipped);

        setCustomerAccount(customerAccount);
    }


    // -------- Attribute Accessors ----------

    /**
     * Get the btvChannelId property.
     * 
     * @return java.lang.Long The value of btvChannelId
     */
    	@javax.persistence.Column(name = "BTV_CHANNEL_ID", nullable = false, insertable = true, updatable = true)
    public java.lang.Long getBtvChannelId()
    {
        return btvChannelId;
    }

    /**
     * Set the btvChannelId property.
     * @param value the new value
     */
    public void setBtvChannelId(java.lang.Long value)
    {
        this.btvChannelId = value;
    }

    /**
     * Get the sortOrder property.
     * 
     * @return java.lang.Integer The value of sortOrder
     */
    	@javax.persistence.Column(name = "SORT_ORDER", insertable = true, updatable = true)
    public java.lang.Integer getSortOrder()
    {
        return sortOrder;
    }

    /**
     * Set the sortOrder property.
     * @param value the new value
     */
    public void setSortOrder(java.lang.Integer value)
    {
        this.sortOrder = value;
    }

    /**
     * Get the skipped property.
     * 
     * @return java.lang.Boolean The value of skipped
     */
    	@javax.persistence.Column(name = "SKIPPED", nullable = false, insertable = true, updatable = true)
    public java.lang.Boolean getSkipped()
    {
        return skipped;
    }

    /**
     * Set the skipped property.
     * @param value the new value
     */
    public void setSkipped(java.lang.Boolean value)
    {
        this.skipped = value;
    }

    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    	@javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    public java.lang.Long getId()
    {
        return id;
    }

    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value)
    {
        this.id = value;
    }


    // ------------- Relations ------------------

    /**
     * Get the customerAccount
     *
     * @return ru.cti.oss.cbe.customer.CustomerAccount
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "CUSTOMERACCOUNT")
    public ru.cti.oss.cbe.customer.CustomerAccount getCustomerAccount()
    {
        return this.customerAccount;
    }

   /**
    * Set the customerAccount
    *
    * @param customerAccount
    */
    public void setCustomerAccount(ru.cti.oss.cbe.customer.CustomerAccount customerAccount)
    {
        this.customerAccount = customerAccount;
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object)
    {
        if (this == object)
        {
            return true;
        }
        if (!(object instanceof BtvChannelPrivateData))
        {
            return false;
        }
        final BtvChannelPrivateData that = (BtvChannelPrivateData)object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId()))
        {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode()
    {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("BtvChannelPrivateData(=");
        sb.append("btvChannelId: ");
        sb.append(getBtvChannelId());
        sb.append(", sortOrder: ");
        sb.append(getSortOrder());
        sb.append(", skipped: ");
        sb.append(getSkipped());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }

    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(BtvChannelPrivateData o)
    {
        int cmp = 0;
        if (this.getId() != null)
        {
            cmp = this.getId().compareTo(o.getId());
        }
        else
        {
            if (this.getBtvChannelId() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getBtvChannelId().compareTo(o.getBtvChannelId()));
            }
            if (this.getSortOrder() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getSortOrder().compareTo(o.getSortOrder()));
            }
            if (this.getSkipped() != null)
            {
                cmp = (cmp != 0 ? cmp : this.getSkipped().compareTo(o.getSkipped()));
            }
        }
        return cmp;
    }
}