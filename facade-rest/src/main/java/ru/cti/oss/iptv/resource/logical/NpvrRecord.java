// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.resource.logical;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for NpvrRecord containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "NPVR_RECORD")
@javax.persistence.NamedQueries( {
        @javax.persistence.NamedQuery(name = "NpvrRecord.findAll", query = "select npvrRecord from NpvrRecord AS npvrRecord"),
        @javax.persistence.NamedQuery(name = "NpvrRecord.findRecordsByProfile", query = "select npvrRecord from NpvrRecord AS npvrRecord left outer join  fetch npvrRecord.program where npvrRecord.customerAccount.id  = :account"),
        @javax.persistence.NamedQuery(name = "NpvrRecord.findRecordsByProfileAndRating", query = "select npvrRecord from NpvrRecord AS npvrRecord left outer join  fetch npvrRecord.program where npvrRecord.customerAccount.id  = :account AND npvrRecord.customerAccount.rating.level >= npvrRecord.program.channel.rating.level")})
public class NpvrRecord implements java.io.Serializable, Comparable < NpvrRecord >
{
    
    private static final long serialVersionUID = 1735201915065998781L;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String name;
    private java.lang.String description;
    private java.lang.Integer status;
    private java.lang.Long id;
    
    // --------- Relationship Definitions -----------
    
    private ru.cti.oss.iptv.resource.logical.Program program;
    private ru.cti.oss.cbe.customer.CustomerAccount customerAccount;
    
    // ---- Manageable Display Attributes (Transient) -----
    
    // --------------- Constructors -----------------
    
    /**
     * Default empty constructor
     */
    public NpvrRecord() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     */
    public NpvrRecord(java.lang.String name, java.lang.String description, java.lang.Integer status) {
        setName(name);
        setDescription(description);
        setStatus(status);


    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param program Value for the program relation
     * @param customerAccount Value for the customerAccount relation
     */
    public NpvrRecord(java.lang.String name, java.lang.String description, java.lang.Integer status,
            ru.cti.oss.iptv.resource.logical.Program program, ru.cti.oss.cbe.customer.CustomerAccount customerAccount) {
        setName(name);
        setDescription(description);
        setStatus(status);
        
        setProgram(program);
        setCustomerAccount(customerAccount);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the name property.
     * 
     * @return java.lang.String The value of name
     */
    @javax.persistence.Column(name = "NAME", nullable = false, insertable = true, updatable = true)
    @Index(name = "name_index")
    public java.lang.String getName() {
        return name;
    }
    
    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(java.lang.String value) {
        this.name = value;
    }
    
    /**
     * Get the description property.
     * 
     * @return java.lang.String The value of description
     */
    @javax.persistence.Column(name = "DESCRIPTION", nullable = true, insertable = true, updatable = true , length = 3800)
    public java.lang.String getDescription() {
        return description;
    }
    
    /**
     * Set the description property.
     * @param value the new value
     */
    public void setDescription(java.lang.String value) {
        this.description = value;
    }
    
    /**
     * Get the status property.
     * 
     * @return java.lang.Integer The value of status
     */
    @javax.persistence.Column(name = "STATUS", nullable = false, insertable = true, updatable = true)
    @Index(name = "status_index")
    public java.lang.Integer getStatus() {
        return status;
    }
    
    /**
     * Set the status property.
     * @param value the new value
     */
    public void setStatus(java.lang.Integer value) {
        this.status = value;
    }
    
    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    @Index(name = "id_index")
    public java.lang.Long getId() {
        return id;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        this.id = value;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Get the program
     *
     * @return ru.cti.oss.iptv.resource.logical.Program
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "PROGRAM")
    public ru.cti.oss.iptv.resource.logical.Program getProgram() {
        return this.program;
    }
    
    /**
     * Set the program
     *
     * @param program
     */
    public void setProgram(ru.cti.oss.iptv.resource.logical.Program program) {
        this.program = program;
    }
    
    /**
     * Get the customerAccount
     *
     * @return ru.cti.oss.cbe.customer.CustomerAccount
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "CUSTOMERACCOUNT")
    public ru.cti.oss.cbe.customer.CustomerAccount getCustomerAccount() {
        return this.customerAccount;
    }
    
    /**
     * Set the customerAccount
     *
     * @param customerAccount
     */
    public void setCustomerAccount(ru.cti.oss.cbe.customer.CustomerAccount customerAccount) {
        this.customerAccount = customerAccount;
    }
    
    // -------- Common Methods -----------
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof NpvrRecord)) {
            return false;
        }
        final NpvrRecord that = (NpvrRecord) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("NpvrRecord(=");
        sb.append("name: ");
        sb.append(getName());
        sb.append(", description: ");
        sb.append(getDescription());
        sb.append(", status: ");
        sb.append(getStatus());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(NpvrRecord o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getName() != null) {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getDescription() != null) {
                cmp = (cmp != 0 ? cmp : this.getDescription().compareTo(o.getDescription()));
            }
            if (this.getStatus() != null) {
                cmp = (cmp != 0 ? cmp : this.getStatus().compareTo(o.getStatus()));
            }
        }
        return cmp;
    }
}