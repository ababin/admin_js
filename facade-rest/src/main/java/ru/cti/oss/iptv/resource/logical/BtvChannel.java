package ru.cti.oss.iptv.resource.logical;

import javax.persistence.NamedQuery;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for BtvChannel containing the
 * bulk of the entity implementation.
 * <p/>
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 * <p/>
 * DO NOT MODIFY this class.
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "BTV_CHANNEL")
@javax.persistence.NamedQueries({
        // Избавляемся от 'select distinct ch ...' так как в Oracle distinct по бинарному полу невозможен (logo_data).
		// BtvServiceImpl
		// BtvScreenshotServiceImpl
		@NamedQuery(name = "BtvChannel.findAll", 
				query =	"SELECT ch FROM BtvChannel ch " +
						"WHERE ch.id IN ( 	SELECT bc.id FROM BtvServiceSpec bss " +
						"					INNER JOIN bss.btvChannels bc " +
						"					WHERE bss.status = 'ACTIVE' " +
						"					  AND bc.status = 'ACTIVE' " +
						"               ) " +
						"ORDER BY ch.sortOrder, ch.id"), 
		
		// ImageServiceImpl
		@NamedQuery(name = "BtvChannel.findAllIdsForImageMap", 
				query =	"SELECT DISTINCT ch.id FROM BtvServiceSpec bss " +
						"INNER JOIN bss.btvChannels ch " +
						"WHERE bss.status = 'ACTIVE' " +
						"  AND ch.status = 'ACTIVE' "),
								
        @NamedQuery(name = "BtvChannel.findAllIds", query = "select btvChannel.id from BtvChannel as btvChannel  order by btvChannel.id"),
        @NamedQuery(name = "BtvChannel.findAllWithProtocol", query = "select ch from BtvChannel  ch inner join ch.mediaSources ms where ms.protocol=:protocol order by ch.id"),
                        
        // EpgImageServiceImpl.getAvailableBtvChannelIds
		@NamedQuery(name = "BtvChannel.findAllIdsForEpgGrid", 
	    	query = "SELECT DISTINCT ch.id, ch.sortOrder FROM BtvServiceSpec bss " +
	    			"INNER JOIN bss.btvChannels ch " + 
	    			"WHERE bss.status = 'ACTIVE' " + 
	    			"  AND ch.status = 'ACTIVE' " +
	    			"ORDER BY ch.sortOrder , ch.id"),
	    
	    // ImageServiceImpl
	    // EpgGridProgramServiceImpl
		@NamedQuery(name = "BtvChannel.findAllIdsForEpgGridByRating", 
	    	query = "SELECT DISTINCT ch.id, ch.sortOrder FROM BtvServiceSpec bss " +
	    			"INNER JOIN bss.btvChannels ch " + 
	    			"WHERE bss.status = 'ACTIVE' " + 
	    			"  AND ch.status = 'ACTIVE' " +
	    			"  AND ch.rating.level <= :ratingLevel " + 
	    			"ORDER BY ch.sortOrder , ch.id"),
        
	    // ImageServiceImpl
        @NamedQuery(name = "BtvChannel.findAllLogoByIds", 
        	query = "SELECT ch.id , ch.logo FROM BtvChannel ch " +
        			"WHERE ch.id IN (:ids) " + 
        			"ORDER by ch.sortOrder , ch.id"),

        @NamedQuery(name = "BtvChannel.findBarkerChannelsIds", query = "select ch.id from BtvChannel ch where ch.barkerPosition is not null"),
        @NamedQuery(name = "BtvChannel.findBtvChannelLogotypeById", query = "select btvChannel.id, btvChannel.logo from BtvChannel btvChannel where btvChannel.id = :channelId order by btvChannel.id")})
public class BtvChannel extends ru.cti.oss.iptv.resource.logical.MediaContent implements java.io.Serializable {

    private static final long serialVersionUID = -1045683017252540277L;

    // ----------- Attribute Definitions ------------

    private ru.cti.oss.iptv.Image logo = new ru.cti.oss.iptv.Image();
    private java.lang.Integer sortOrder;
    private java.lang.Integer barkerPosition;
    private Boolean doScreenshots;

    private String format;
    private String channelUrl;

    private java.lang.String primaryProtocol;
    private java.lang.String primaryAddress;

    private java.lang.Integer primaryPortNumber;

    // --------------- Constructors -----------------

    /**
     * Default empty constructor
     */
    public BtvChannel() {
    }

    // -------- Attribute Accessors ----------

    @javax.persistence.Column(name = "DO_SCREENSHOTS", nullable = true, insertable = true, updatable = true)
    public Boolean getDoScreenshots() {
        return doScreenshots;
    }

    public void setDoScreenshots(Boolean doScreenshots) {
        this.doScreenshots = doScreenshots;
    }

    /**
     * Get the logo property.
     *
     * @return ru.cti.oss.iptv.Image The value of logo
     */
    @javax.persistence.Embedded
    @javax.persistence.AttributeOverrides({
            @javax.persistence.AttributeOverride(name = "width", column = @javax.persistence.Column(name = "LOGO_WIDTH", insertable = true, updatable = true)),
            @javax.persistence.AttributeOverride(name = "height", column = @javax.persistence.Column(name = "LOGO_HEIGHT", insertable = true, updatable = true)),
            @javax.persistence.AttributeOverride(name = "size", column = @javax.persistence.Column(name = "LOGO_SIZE", insertable = true, updatable = true)),
            @javax.persistence.AttributeOverride(name = "contentType", column = @javax.persistence.Column(name = "LOGO_CONTENT_TYPE", insertable = true, updatable = true)),
            @javax.persistence.AttributeOverride(name = "data", column = @javax.persistence.Column(name = "LOGO_DATA", insertable = true, updatable = true))})
    public ru.cti.oss.iptv.Image getLogo() {
        return logo;
    }

    /**
     * Set the logo property.
     *
     * @param value the new value
     */
    public void setLogo(ru.cti.oss.iptv.Image value) {
        this.logo = value;
    }

    @javax.persistence.Column(name = "BARKER_POSITION", nullable = true, insertable = true, updatable = true)
    public java.lang.Integer getBarkerPosition() {
        return barkerPosition;
    }

    public void setBarkerPosition(java.lang.Integer barkerPosition) {
        this.barkerPosition = barkerPosition;
    }

    /**
     * Get the sortOrder property.
     *
     * @return java.lang.Integer The value of sortOrder
     */
    @javax.persistence.Column(name = "SORT_ORDER", nullable = false, insertable = true, updatable = true)
    public java.lang.Integer getSortOrder() {
        return sortOrder;
    }

    /**
     * Set the sortOrder property.
     *
     * @param value the new value
     */
    public void setSortOrder(java.lang.Integer value) {
        this.sortOrder = value;
    }

    /**
     * @return the format
     */
    @javax.persistence.Column(name = "FORMAT", insertable = true, updatable = true)
    public String getFormat() {
        return format;
    }

    /**
     * @param format the format to set
     */
    public void setFormat(String format) {
        this.format = format;
    }

    /**
     * @return the channelUrl
     */
    @javax.persistence.Column(name = "CHANNEL_URL", insertable = true, updatable = true)
    public String getChannelUrl() {
        return channelUrl;
    }

    /**
     * @param channelUrl the channelUrl to set
     */
    public void setChannelUrl(String channelUrl) {
        this.channelUrl = channelUrl;
    }

    @javax.persistence.Column(name = "PRIMARY_ADDRESS", nullable = true, insertable = true, updatable = true)
    @Index(name = "primary_address_index")
    public java.lang.String getPrimaryAddress() {
        return this.primaryAddress;
    }

    @javax.persistence.Column(name = "PRIMARY_PORT_NUMBER", nullable = true, insertable = true, updatable = true)
    public java.lang.Integer getPrimaryPortNumber() {
        return this.primaryPortNumber;
    }

    @javax.persistence.Column(name = "PRIMARY_PROTOCOL", nullable = true, insertable = true, updatable = true)
        @Index(name = "primary_protocol_index")
        public java.lang.String getPrimaryProtocol() {
            return this.primaryProtocol;
        }

    public void setPrimaryAddress(final java.lang.String primaryAddress) {
        this.primaryAddress = primaryAddress;
    }

    public void setPrimaryPortNumber(final java.lang.Integer primaryPortNumber) {
        this.primaryPortNumber = primaryPortNumber;
    }

    public void setPrimaryProtocol(final java.lang.String primaryProtocol) {
            this.primaryProtocol = primaryProtocol;
        }

    // ------------- Relations ------------------

    /* (non-Javadoc)
    * @see ru.cti.oss.iptv.resource.logical.MediaContent#getMediaSource()
    */
    @Deprecated
    @javax.persistence.Transient
    public ru.cti.oss.iptv.resource.logical.MediaSource getMediaSource() {
        return MediaContentToDefaultMediaSourceHelper.getDefaultMulticastChannel(this.getMediaSources());
    }

    // -------- Common Methods -----------

    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof BtvChannel)) {
            return false;
        }
        final BtvChannel that = (BtvChannel) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = super.hashCode();
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());

        return hashCode;
    }

    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("BtvChannel(=");
        sb.append(super.toString());
        sb.append("logo: ");
        if (getLogo() != null)
            sb.append(getLogo().toString());
        else
            sb.append("null");
        sb.append(", sortOrder: ");
        sb.append(getSortOrder());
        sb.append(")");
        return sb.toString();
    }

}