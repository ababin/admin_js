// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.iptv.resource.logical;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for MediaAsset containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "MEDIA_ASSET")
@javax.persistence.EntityListeners( { ru.cti.oss.iptv.resource.logical.MediaAssetListener.class })
@org.hibernate.annotations.BatchSize(size = 20)
@javax.persistence.NamedQueries( {
        @javax.persistence.NamedQuery(name = "MediaAsset.findAll", query = "select mediaAsset from MediaAsset AS mediaAsset"),
        @javax.persistence.NamedQuery(name = "MediaAsset.findByFileName", query = "select ma from MediaAsset ma where ma.fileName = :fileName"), 
        
        // CasBean
        @javax.persistence.NamedQuery(name = "MediaAsset.findByPartRtspFileNameWithEncryption", 
        	query = "SELECT ma FROM MediaAsset ma " +
        			"WHERE " +
        			"  ma.encryption != 'NONE' " +
        			"  AND ma.protocol='rtsp' "+
        			"  AND (ma.fileName = :partOfName OR ma.fileName LIKE '%/' || :partOfName )"),
		
        // CasBean
        @javax.persistence.NamedQuery(name = "MediaAsset.findByPartRtspFileNameWithEncryptionAndExtension", 
        	query = "SELECT ma FROM MediaAsset ma " +
        			"WHERE " +
        			"  ma.encryption != 'NONE' " +
        			"  AND ma.protocol='rtsp' "+
        			"  AND (ma.fileName LIKE :partOfName || '.mpi' OR ma.fileName LIKE '%/' || :partOfName || '.mpi' )")
})
public class MediaAsset extends ru.cti.oss.iptv.resource.logical.MediaSource implements java.io.Serializable
{
    
    private static final long serialVersionUID = 182342506630035664L;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String fileName;
    private java.lang.Long fileSize;
    private java.lang.Long duration;
    
    // --------- Relationship Definitions -----------
    
    private java.util.Set < ru.cti.oss.iptv.resource.physical.VideoServer > videoservers = new java.util.TreeSet < ru.cti.oss.iptv.resource.physical.VideoServer >();
    
    // ---- Manageable Display Attributes (Transient) -----
    
    // --------------- Constructors -----------------
    
    /**
     * Default empty constructor
     */
    public MediaAsset() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param encryption Value for the encryption property
     * @param copyProtection Value for the copyProtection property
     * @param encoding Value for the encoding property
     * @param bitrate Value for the bitrate property
     * @param volume Value for the volume property
     * @param fileName Value for the fileName property
     * @param fileSize Value for the fileSize property
     * @param duration Value for the duration property
     */
    public MediaAsset(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status,
            ru.cti.oss.iptv.resource.logical.EncryptionType encryption, java.lang.Boolean copyProtection,
            ru.cti.oss.iptv.resource.logical.MediaEncodingType encoding, java.lang.Long bitrate, java.lang.Integer volume,
            java.lang.String fileName, java.lang.Long fileSize, java.lang.Long duration, String application, String protocol) {
        super(name, description, status, encryption, copyProtection, encoding, bitrate, volume, application, protocol);
        setName(name);
        setDescription(description);
        setStatus(status);
        setEncryption(encryption);
        setCopyProtection(copyProtection);
        setEncoding(encoding);
        setBitrate(bitrate);
        setVolume(volume);
        setFileName(fileName);
        setFileSize(fileSize);
        setDuration(duration);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param description Value for the description property
     * @param status Value for the status property
     * @param encryption Value for the encryption property
     * @param copyProtection Value for the copyProtection property
     * @param encoding Value for the encoding property
     * @param bitrate Value for the bitrate property
     * @param volume Value for the volume property
     * @param fileName Value for the fileName property
     * @param fileSize Value for the fileSize property
     * @param duration Value for the duration property
     * @param videoservers Value for the videoservers relation
     */
    public MediaAsset(java.lang.String name, java.lang.String description, ru.cti.oss.cbe.datatypes.LifeCycleState status,
            ru.cti.oss.iptv.resource.logical.EncryptionType encryption, java.lang.Boolean copyProtection,
            ru.cti.oss.iptv.resource.logical.MediaEncodingType encoding, java.lang.Long bitrate, java.lang.Integer volume,
            java.lang.String fileName, java.lang.Long fileSize, java.lang.Long duration,
            java.util.Set < ru.cti.oss.iptv.resource.physical.VideoServer > videoservers) {
        setName(name);
        setDescription(description);
        setStatus(status);
        setEncryption(encryption);
        setCopyProtection(copyProtection);
        setEncoding(encoding);
        setBitrate(bitrate);
        setVolume(volume);
        setFileName(fileName);
        setFileSize(fileSize);
        setDuration(duration);
        
        setVideoservers(videoservers);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the fileName property.
     * 
     * @return java.lang.String The value of fileName
     */
    @javax.persistence.Column(name = "FILE_NAME", nullable = false, insertable = true, updatable = true)
    @Index(name = "file_name_index")
    public java.lang.String getFileName() {
        return fileName;
    }
    
    /**
     * Set the fileName property.
     * @param value the new value
     */
    public void setFileName(java.lang.String value) {
        this.fileName = value;
    }
    
    /**
     * Get the fileSize property.
     * 
     * @return java.lang.Long The value of fileSize
     */
    @javax.persistence.Column(name = "FILE_SIZE", insertable = true, updatable = true)
    @Index(name = "file_size_index")
    public java.lang.Long getFileSize() {
        return fileSize;
    }
    
    /**
     * Set the fileSize property.
     * @param value the new value
     */
    public void setFileSize(java.lang.Long value) {
        this.fileSize = value;
    }
    
    /**
     * Get the duration property.
     * 
     * @return java.lang.Long The value of duration
     */
    @javax.persistence.Column(name = "DURATION", nullable = false, insertable = true, updatable = true)
    @Index(name = "duration_index")
    public java.lang.Long getDuration() {
        return duration;
    }
    
    /**
     * Set the duration property.
     * @param value the new value
     */
    public void setDuration(java.lang.Long value) {
        this.duration = value;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Get the videoservers Collection
     *
     * @return java.util.Set<ru.cti.oss.iptv.resource.physical.VideoServer>
     */
    @javax.persistence.ManyToMany(mappedBy = "mediaAssets", fetch = javax.persistence.FetchType.LAZY)
    public java.util.Set < ru.cti.oss.iptv.resource.physical.VideoServer > getVideoservers() {
        return this.videoservers;
    }
    
    /**
     * Set the videoservers
     *
     * @param videoservers
     */
    public void setVideoservers(java.util.Set < ru.cti.oss.iptv.resource.physical.VideoServer > videoservers) {
        this.videoservers = videoservers;
    }
    
    /**
     * Add VideoServer
     *
     * @param videoServer
     */
    
    public void addToVideoservers(ru.cti.oss.iptv.resource.physical.VideoServer videoServer) {
        if (videoServer == null)
            return;
        this.getVideoservers().add(videoServer);
        videoServer.getMediaAssets().add(this);
    }
    
    /**
     * Remove VideoServer
     *
     * @param videoServer
     */
    
    public void removeFromVideoservers(ru.cti.oss.iptv.resource.physical.VideoServer videoServer) {
        if (videoServer == null)
            return;
        this.getVideoservers().remove(videoServer);
        videoServer.getMediaAssets().remove(this);
    }
    
    // -------- Common Methods -----------
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof MediaAsset)) {
            return false;
        }
        final MediaAsset that = (MediaAsset) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = super.hashCode();
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("MediaAsset(=");
        sb.append(super.toString());
        sb.append("fileName: ");
        sb.append(getFileName());
        sb.append(", fileSize: ");
        sb.append(getFileSize());
        sb.append(", duration: ");
        sb.append(getDuration());
        sb.append(")");
        return sb.toString();
    }
    
}