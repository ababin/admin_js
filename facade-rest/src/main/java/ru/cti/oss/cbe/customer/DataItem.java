// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: EntityEmbeddable.vsl in andromda-ejb3-cartridge.
//
package ru.cti.oss.cbe.customer;

import org.hibernate.annotations.Index;

/**
 * Autogenerated POJO EJB class for DataItem containing the
 * bulk of the entity implementation.
 *
 * This is autogenerated by AndroMDA using the EJB3
 * cartridge.
 *
 * DO NOT MODIFY this class.
 *
 * 
 *
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "DATA_ITEM")
@javax.persistence.NamedQueries( {
        @javax.persistence.NamedQuery(name = "DataItem.findAll", query = "select dataItem from DataItem AS dataItem"),
        @javax.persistence.NamedQuery(name = "DataItem.findProfileParameters", query = "select di from DataItem di where di.account.id = :profileId"),
        @javax.persistence.NamedQuery(name = "DataItem.findProfileParameter", query = "select di from DataItem di where di.account.id = :profileId and di.name = :name"),
        @javax.persistence.NamedQuery(name = "DataItem.findProfileParameterId", query = "select di.id from DataItem di where di.account.id = :profileId and di.name = :name")

})
public class DataItem implements java.io.Serializable, Comparable < DataItem >
{
    
    private static final long serialVersionUID = 8086389957245676895L;
    
    // ----------- Attribute Definitions ------------
    
    private java.lang.String name;
    private java.lang.String value;
    private java.util.Date expire;
    private java.lang.Long id;
    
    // --------- Relationship Definitions -----------
    
    private ru.cti.oss.cbe.customer.CustomerAccount account;
    
    // ---- Manageable Display Attributes (Transient) -----
    
    // --------------- Constructors -----------------
    
    /**
     * Default empty constructor
     */
    public DataItem() {
    }
    
    /**
     * Implementation for the constructor with all POJO attributes except auto incremented identifiers.
     * This method sets all POJO fields defined in this class to the values provided by
     * the parameters.
     *
     * @param name Value for the name property
     * @param value Value for the value property
     * @param expire Value for the expire property
     */
    public DataItem(java.lang.String name, java.lang.String value, java.util.Date expire) {
        setName(name);
        setValue(value);
        setExpire(expire);
    }
    
    /**
     * Constructor with all POJO attribute values and CMR relations.
     *
     * @param name Value for the name property
     * @param value Value for the value property
     * @param expire Value for the expire property
     * @param account Value for the account relation
     */
    public DataItem(java.lang.String name, java.lang.String value, java.util.Date expire, ru.cti.oss.cbe.customer.CustomerAccount account) {
        setName(name);
        setValue(value);
        setExpire(expire);
        
        setAccount(account);
    }
    
    // -------- Attribute Accessors ----------
    
    /**
     * Get the name property.
     * 
     * @return java.lang.String The value of name
     */
    @javax.persistence.Column(name = "NAME", nullable = false, insertable = true, updatable = true)
    @Index(name = "name_index")
    public java.lang.String getName() {
        return name;
    }
    
    /**
     * Set the name property.
     * @param value the new value
     */
    public void setName(java.lang.String value) {
        this.name = value;
    }
    
    /**
     * Get the value property.
     * 
     * @return java.lang.String The value of value
     */
    @javax.persistence.Column(name = "VALUE", nullable = false, insertable = true, updatable = true)
    @Index(name = "value_index")
    public java.lang.String getValue() {
        return value;
    }
    
    /**
     * Set the value property.
     * @param value the new value
     */
    public void setValue(java.lang.String value) {
        this.value = value;
    }
    
    /**
     * Get the expire property.
     * 
     * @return java.util.Date The value of expire
     */
    @javax.persistence.Column(name = "EXPIRE", nullable = false, insertable = true, updatable = true)
    @javax.persistence.Temporal(javax.persistence.TemporalType.TIMESTAMP)
    @Index(name = "expire_index")
    public java.util.Date getExpire() {
        return expire;
    }
    
    /**
     * Set the expire property.
     * @param value the new value
     */
    public void setExpire(java.util.Date value) {
        this.expire = value;
    }
    
    /**
     * Get the id property.
     * 
     * @return java.lang.Long The value of id
     */
    @javax.persistence.Id
    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO)
    @javax.persistence.Column(name = "ID", nullable = false, insertable = true, updatable = true)
    @Index(name = "id_index")
    public java.lang.Long getId() {
        return id;
    }
    
    /**
     * Set the id property.
     * @param value the new value
     */
    public void setId(java.lang.Long value) {
        this.id = value;
    }
    
    // ------------- Relations ------------------
    
    /**
     * Get the account
     *
     * @return ru.cti.oss.cbe.customer.CustomerAccount
     */
    @javax.persistence.ManyToOne(optional = false, fetch = javax.persistence.FetchType.LAZY)
    @javax.persistence.JoinColumn(name = "ACCOUNT")
    public ru.cti.oss.cbe.customer.CustomerAccount getAccount() {
        return this.account;
    }
    
    /**
     * Set the account
     *
     * @param account
     */
    public void setAccount(ru.cti.oss.cbe.customer.CustomerAccount account) {
        this.account = account;
    }
    
    // -------- Common Methods -----------
    
    /**
     * Indicates if the argument is of the same type and all values are equal.
     *
     * @param object The target object to compare with
     * @return boolean True if both objects a 'equal'
     */
    public boolean equals(Object object) {
        if (this == object) {
            return true;
        }
        if (!(object instanceof DataItem)) {
            return false;
        }
        final DataItem that = (DataItem) object;
        if (this.getId() == null || that.getId() == null || !this.getId().equals(that.getId())) {
            return false;
        }
        return true;
    }
    
    /**
     * Returns a hash code value for the object
     *
     * @return int The hash code value
     */
    public int hashCode() {
        int hashCode = 0;
        hashCode = 29 * hashCode + (getId() == null ? 0 : getId().hashCode());
        
        return hashCode;
    }
    
    /**
     * Returns a String representation of the object
     *
     * @return String Textual representation of the object displaying name/value pairs for all attributes
     */
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("DataItem(=");
        sb.append("name: ");
        sb.append(getName());
        sb.append(", value: ");
        sb.append(getValue());
        sb.append(", expire: ");
        sb.append(getExpire());
        sb.append(", id: ");
        sb.append(getId());
        sb.append(")");
        return sb.toString();
    }
    
    /**
     * @see java.lang.Comparable#compareTo(T)
     */
    public int compareTo(DataItem o) {
        int cmp = 0;
        if (this.getId() != null) {
            cmp = this.getId().compareTo(o.getId());
        } else {
            if (this.getName() != null) {
                cmp = (cmp != 0 ? cmp : this.getName().compareTo(o.getName()));
            }
            if (this.getValue() != null) {
                cmp = (cmp != 0 ? cmp : this.getValue().compareTo(o.getValue()));
            }
            if (this.getExpire() != null) {
                cmp = (cmp != 0 ? cmp : this.getExpire().compareTo(o.getExpire()));
            }
        }
        return cmp;
    }
}